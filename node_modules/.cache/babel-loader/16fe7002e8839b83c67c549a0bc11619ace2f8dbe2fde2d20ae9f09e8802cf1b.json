{"ast":null,"code":"var _window;import React,{useState,useEffect}from'react';import'./App.css';import QuizContainer from'./components/QuizContainer';import Statistics from'./components/Statistics';import LoadingOverlay from'./components/LoadingOverlay';import Simulation from'./components/Simulation';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const isElectron=((_window=window)===null||_window===void 0?void 0:_window.electron)!==undefined;function App(){// State for app mode and chapter selection\nconst[appMode,setAppMode]=useState('quiz');// 'quiz' or 'simulation'\nconst[activeChapter,setActiveChapter]=useState('cap1');// State for question sets\nconst[questions,setQuestions]=useState([]);const[questionsChapter2,setQuestionsChapter2]=useState([]);const[questionsChapter3,setQuestionsChapter3]=useState([]);const[questionsChapter4,setQuestionsChapter4]=useState([]);const[questionsChapter5,setQuestionsChapter5]=useState([]);const[questionsChapter6,setQuestionsChapter6]=useState([]);const[questionsChapter7,setQuestionsChapter7]=useState([]);const[questionsChapter8,setQuestionsChapter8]=useState([]);const[questionsChapter9,setQuestionsChapter9]=useState([]);const[questionsChapter10,setQuestionsChapter10]=useState([]);const[questionsChapter11,setQuestionsChapter11]=useState([]);const[questionsChapter12,setQuestionsChapter12]=useState([]);const[questionsChapter13,setQuestionsChapter13]=useState([]);const[questionsChapter14,setQuestionsChapter14]=useState([]);const[filteredQuestions,setFilteredQuestions]=useState([]);// State for correct answers from all chapters\nconst[correctAnswers,setCorrectAnswers]=useState({});const[correctAnswersChapter2,setCorrectAnswersChapter2]=useState({});const[correctAnswersChapter3,setCorrectAnswersChapter3]=useState({});const[correctAnswersChapter4,setCorrectAnswersChapter4]=useState({});const[correctAnswersChapter5,setCorrectAnswersChapter5]=useState({});const[correctAnswersChapter6,setCorrectAnswersChapter6]=useState({});const[correctAnswersChapter7,setCorrectAnswersChapter7]=useState({});const[correctAnswersChapter8,setCorrectAnswersChapter8]=useState({});const[correctAnswersChapter9,setCorrectAnswersChapter9]=useState({});const[correctAnswersChapter10,setCorrectAnswersChapter10]=useState({});const[correctAnswersChapter11,setCorrectAnswersChapter11]=useState({});const[correctAnswersChapter12,setCorrectAnswersChapter12]=useState({});const[correctAnswersChapter13,setCorrectAnswersChapter13]=useState({});const[correctAnswersChapter14,setCorrectAnswersChapter14]=useState({});const[isLoading,setIsLoading]=useState(true);const[stats,setStats]=useState({correctCount:0,totalCount:0,bookmarkedCount:0});const[bookmarkedQuestions,setBookmarkedQuestions]=useState(new Set());const[error,setError]=useState(null);// State for loading and errors per chapter\nconst[chapterLoadingStates,setChapterLoadingStates]=useState({cap1:true,cap2:true,cap3:true,cap4:true,cap5:true,cap6:true,cap7:true,cap8:true,cap9:true,cap10:true,cap11:true,cap12:true,cap13:true,cap14:true});const[chapterErrors,setChapterErrors]=useState({});// Helper function to update loading state for a chapter\nconst setChapterLoading=(chapter,isLoading)=>{setChapterLoadingStates(prev=>({...prev,[chapter]:isLoading}));};// Helper function to update error state for a chapter\nconst setChapterError=(chapter,error)=>{setChapterErrors(prev=>({...prev,[chapter]:error}));};// Combined fetch function for questions and answers\nconst fetchChapterData=async chapter=>{setChapterLoading(chapter,true);try{// Fetch questions\nlet questionsData;let answersData;if(isElectron){// Use Electron IPC to load files\nquestionsData=await window.electron.ipcRenderer.invoke('read-file',`capitole/cap${chapter}.json`);answersData=await window.electron.ipcRenderer.invoke('read-file',`capitole/cap${chapter}_raspunsuri`);}else{// Web browser fetch\nconst questionsResponse=await fetch(`/capitole/cap${chapter}.json`);questionsData=await questionsResponse.json();const answersResponse=await fetch(`/capitole/cap${chapter}_raspunsuri`);answersData=await answersResponse.text();}// Process answers\nconst answers={};answersData.split('; ').forEach(item=>{const parts=item.split('.');if(parts.length===2){const questionNumber=parseInt(parts[0]);const answer=parts[1];answers[questionNumber]=answer;}});// Update state based on chapter\nswitch(chapter){case 4:setQuestionsChapter4(questionsData);setCorrectAnswersChapter4(answers);break;case 5:setQuestionsChapter5(questionsData);setCorrectAnswersChapter5(answers);break;case 6:setQuestionsChapter6(questionsData);setCorrectAnswersChapter6(answers);break;case 7:setQuestionsChapter7(questionsData);setCorrectAnswersChapter7(answers);break;case 8:setQuestionsChapter8(questionsData);setCorrectAnswersChapter8(answers);break;case 9:setQuestionsChapter9(questionsData);setCorrectAnswersChapter9(answers);break;case 10:setQuestionsChapter10(questionsData);setCorrectAnswersChapter10(answers);break;case 11:setQuestionsChapter11(questionsData);setCorrectAnswersChapter11(answers);break;case 12:setQuestionsChapter12(questionsData);setCorrectAnswersChapter12(answers);break;case 13:setQuestionsChapter13(questionsData);setCorrectAnswersChapter13(answers);break;case 14:setQuestionsChapter14(questionsData);setCorrectAnswersChapter14(answers);break;}setChapterError(chapter,null);}catch(error){console.error(`Error loading chapter ${chapter}:`,error);setChapterError(chapter,`Failed to load chapter ${chapter}`);}finally{setChapterLoading(chapter,false);}};// Load all chapters data\nuseEffect(()=>{const loadChapters=async()=>{// Load chapters 1 and 2 first\ntry{let data1,data2;if(isElectron){// Use Electron IPC to load files\ndata1=await window.electron.ipcRenderer.invoke('read-file','capitole/cap1.json');data2=await window.electron.ipcRenderer.invoke('read-file','capitole/cap2.json');}else{// Web browser fetch\nconst response1=await fetch('/capitole/cap1.json');data1=await response1.json();const response2=await fetch('/capitole/cap2.json');data2=await response2.json();}setQuestions(data1);setQuestionsChapter2(data2);setChapterLoading('cap1',false);setChapterLoading('cap2',false);}catch(error){console.error('Error fetching chapters 1 and 2:',error);setChapterError('cap1','Failed to load chapter 1');setChapterError('cap2','Failed to load chapter 2');}// Then load chapters 4-14\nconst chaptersToLoad=[4,5,6,7,8,9,10,11,12,13,14];const loadChapterWithDelay=async(chapter,delay)=>{await new Promise(resolve=>setTimeout(resolve,delay));await fetchChapterData(chapter);};const promises=chaptersToLoad.map((chapter,index)=>loadChapterWithDelay(chapter,index*200));await Promise.all(promises);setIsLoading(false);};loadChapters();},[]);// Încărcăm răspunsurile corecte pentru capitolul 1\nuseEffect(()=>{const answersData=\"1.ACE; 2.CDE; 3.ABE; 4.ABE; 5.ADE; 6.BDE; 7.ACD; 8.BDE; 9.ABDE; 10.ACE; 11.BDE; 12.ACD; 13.ADE; 14.ACD; 15.BDE; 16.ABCE; 17.AE; 18.BCDE; 19.BE; 20.CDE; 21.ABD; 22.ACE; 23.BCD; 24.ACD; 25.CDE; 26.ACD; 27.CE; 28.BD; 29.CDE; 30.ACD; 31.E; 32.ACD; 33.BDE; 34.ACDE; 35.BD; 36.ABCE; 37.BCE; 38.ACD; 39.BCE; 40.ABD; 41.CDE; 42.BD; 43.CDE; 44.ABE; 45.ABC; 46.BCD; 47.ABE; 48.ADE; 49.BCE; 50.ABD; 51.BCE; 52.BCE; 53.ACE; 54.ABD; 55.ACD; 56.AE; 57.ABE; 58.ACD; 59.ACDE; 60.ACE; 61.BDE; 62.ABE; 63.CD; 64.ABCD; 65.BCD; 66.ACE; 67.ACE; 68.ABD; 69.BDE; 70.ABC; 71.BCE; 72.BDE; 73.ACE; 74.BD; 75.ACDE; 76.ABD; 77.BCE; 78.ACE; 79.BCE; 80.ABCE; 81.ACD; 82.ACD; 83.BDE; 84.ABDE; 85.ABE 86.ACE; 87.ACE; 88.ABE; 89.AD; 90.BCD; 91.BDE; 92.BCE; 93.ACE; 94.ABE; 95.ADE; 96.ABC; 97.BE; 98.ABE; 99.ACDE; 100.ABE; 101.CDE; 102.ACD; 103.ADE; 104.ABD; 105.ACDE; 106.AD; 107.BDE; 108.ABE; 109.ACE; 110.CDE; 111.CDE; 112.ADE; 113.ACE; 114.ACE; 115.ACE; 116.ACD; 117.ACE; 118.BE; 119.ABCE; 120.ACE; 121.ACE; 122.BCD; 123.BCE; 124.ACE; 125.BDE; 126.AC; 127.CDE; 128.ADE; 129.CE; 130.ABD; 131.ACD; 132.BCE; 133.B; 134.BE; 135.ADE; 136.ABCE; 137.BC; 138.CDE; 139.ABE; 140.BDE; 141.ACD; 142.BCE; 143.BCE; 144.CDE; 145.BD; 146.ABDE; 147.ACE; 148.ABD; 149.BDE; 150.ACE; 151.ACDE; 152.BCD; 153.ADE; 154.CDE; 155.BCE; 156.AC; 157.ACD; 158.BDE; 159.BDE; 160.BCE; 161.ACD; 162.ACE; 163.AC; 164.ACD; 165.BCE; 166.ABCD; 167.CE; 168.ABCE; 169.ABCE; 170.BCE; 171.ACE; 172.BDE; 173.CDE; 174.ABE; 175.BCE; 176.ABE; 177.BDE; 178.ABD; 179.ACD; 180.BDE; 181.ADE; 182.CDE; 183.BDE; 184.ACE; 185.BCD; 186.ABE; 187.BCE; 188.BCD; 189.ADE; 190.ADE; 191.ACD; 192.BCD; 193.ACE; 194.BCD; 195.ADE; 196.ABE; 197.BCDE; 198.ACD; 199.BDE; 200.ADE\";const answers={};answersData.split('; ').forEach(item=>{const parts=item.split('.');if(parts.length===2){const questionNumber=parseInt(parts[0]);const answer=parts[1];answers[questionNumber]=answer;}});setCorrectAnswers(answers);},[]);// Încărcăm răspunsurile corecte pentru capitolul 2\nuseEffect(()=>{const answersData2=\"1.ADE; 2.AE; 3.ABE; 4.ABE; 5.ACE; 6.ABE; 7.ADE; 8.BCD; 9.BDE; 10.ACE; 11.ADE; 12.BCE; 13.BDE; 14.BCD; 15.BDE; 16.ABD; 17.ACDE; 18.BD; 19.ACE; 20.ACD; 21.BE; 22.ABD; 23.CE; 24.ACD; 25.ABE; 26.ACD; 27.ACDE; 28.BCE; 29.BE; 30.ABE; 31.ADE; 32.CD; 33.BD; 34.D; 35.BD; 36.ABE; 37.BCD; 38.BDE; 39.ADE; 40.ADE; 41.ACE; 42.ACDE; 43.ABE; 44.ADE; 45.BD; 46.ABE; 47.CD; 48.AD; 49.BDE; 50.ACE; 51.BCE; 52.BCD; 53.BCDE; 54.C; 55.BCE; 56.AD; 57.ACE; 58.BCE; 59.ABD; 60.BCE; 61.ACE; 62.AD; 63.ABD; 64.ACE; 65.ACE; 66.ACDE; 67.ADE; 68.ABD; 69.BCD; 70.ACD; 71.BD; 72.ABE; 73.BCE; 74.AD; 75.ACE; 76.BCE; 77.ABE; 78.BC; 79.BDE; 80.BE; 81.CE; 82.ACD; 83.ABD; 84.ABDE; 85.BCD; 86.CD; 87.AE; 88.BCD; 89.ACE; 90.CE; 91.BCD; 92.ABE; 93.BDE; 94.ABE; 95.DE; 96.BCD; 97.ABD; 98.ACE; 99.BCE; 100.ACE; 101.BCD; 102.BDE; 103.BCD; 104.BCD; 105.BCE; 106.BDE; 107.ACE; 108.ADE; 109.ACE; 110.ACD; 111.ACDE; 112.BCE; 113.BCE; 114.BCE; 115.BCDE; 116.ABD; 117.ACE; 118.BE; 119.BD; 120.ACD; 121.ABE; 122.ACE; 123.BCE; 124.ABE; 125.ACE; 126.ACD; 127.ACD; 128.ABD; 129.BCE; 130.BCE; 131.D; 132.DE; 133.AD; 134.BCD; 135.BCE; 136.ABCE; 137.BDE; 138.BDE; 139.BCD; 140.BCE; 141.ACD; 142.BCE; 143.CDE; 144.ACDE; 145.BDE; 146.BCD; 147.CDE; 148.AD; 149.BC; 150.ACD; 151.ACE; 152.AD; 153.ACE; 154.ACDE; 155.BCD; 156.ABDE; 157.ABE; 158.BCD; 159.ABD; 160.BCD; 161.AD; 162.ADE; 163.BCD; 164.AC; 165.BDE; 166.CDE; 167.ABC; 168.ADE; 169.BC; 170.BDE; 171.BDE; 172.ADE; 173.BDE; 174.ABE; 175.BCD; 176.BCE; 177.BCD; 178.ACE; 179.ACE; 180.ACD; 181.ABDE; 182.BE; 183.ACE; 184.CE; 185.CDE; 186.ACDE; 187.ABE; 188.BCD; 189.ACE; 190.ACD\";const answers={};answersData2.split('; ').forEach(item=>{const parts=item.split('.');if(parts.length===2){const questionNumber=parseInt(parts[0]);const answer=parts[1];answers[questionNumber]=answer;}});setCorrectAnswersChapter2(answers);},[]);// Încărcăm răspunsurile corecte pentru capitolul 3\nuseEffect(()=>{const fetchQuestionsChapter3=async()=>{try{const response=await fetch('/cap3.json');const data=await response.json();setQuestionsChapter3(data);}catch(error){console.error('Error fetching chapter 3:',error);setError('Failed to load chapter 3 questions');}};fetchQuestionsChapter3();},[questionsChapter2]);// Depends on chapter 2 loading to ensure proper ordering\n// Helper function to safely interact with localStorage\nconst safeStorage={getItem:key=>{try{return localStorage.getItem(key);}catch(e){return null;}},setItem:(key,value)=>{try{localStorage.setItem(key,value);return true;}catch(e){return false;}}};// Încărcăm întrebările salvate din localStorage\nuseEffect(()=>{try{const savedBookmarks=safeStorage.getItem('bookmarkedQuestions');if(savedBookmarks){const bookmarks=JSON.parse(savedBookmarks);setBookmarkedQuestions(new Set(bookmarks));setStats(prev=>({...prev,bookmarkedCount:bookmarks.length}));}}catch(e){console.warn('Could not load bookmarks:',e);}},[]);// Actualizăm numărul de întrebări salvate când se modifică bookmarkedQuestions\nuseEffect(()=>{setStats(prev=>({...prev,bookmarkedCount:bookmarkedQuestions.size}));// Salvăm întrebările marcate în localStorage\ntry{safeStorage.setItem('bookmarkedQuestions',JSON.stringify([...bookmarkedQuestions]));}catch(e){console.warn('Could not save bookmarks:',e);}},[bookmarkedQuestions]);// Funcția pentru schimbarea modului aplicației\nconst switchAppMode=mode=>{setAppMode(mode);};// Update switchChapter function to handle new chapters\nconst switchChapter=chapter=>{setActiveChapter(chapter);switch(chapter){case'cap1':setFilteredQuestions(questions);break;case'cap2':setFilteredQuestions(questionsChapter2);break;case'cap3':setFilteredQuestions(questionsChapter3);break;case'cap4':setFilteredQuestions(questionsChapter4);break;case'cap5':setFilteredQuestions(questionsChapter5);break;case'cap6':setFilteredQuestions(questionsChapter6);break;case'cap7':setFilteredQuestions(questionsChapter7);break;case'cap8':setFilteredQuestions(questionsChapter8);break;case'cap9':setFilteredQuestions(questionsChapter9);break;case'cap10':setFilteredQuestions(questionsChapter10);break;case'cap11':setFilteredQuestions(questionsChapter11);break;case'cap12':setFilteredQuestions(questionsChapter12);break;case'cap13':setFilteredQuestions(questionsChapter13);break;case'cap14':setFilteredQuestions(questionsChapter14);break;default:setFilteredQuestions([]);}resetStats();};// Funcția de căutare în întrebări\nconst searchQuestions=query=>{if(!query.trim()){// Reset based on active chapter\nswitch(activeChapter){case'cap1':setFilteredQuestions([...questions]);break;case'cap2':setFilteredQuestions([...questionsChapter2]);break;case'cap3':setFilteredQuestions([...questionsChapter3]);break;case'cap4':setFilteredQuestions([...questionsChapter4]);break;case'cap5':setFilteredQuestions([...questionsChapter5]);break;case'cap6':setFilteredQuestions([...questionsChapter6]);break;case'cap7':setFilteredQuestions([...questionsChapter7]);break;case'cap8':setFilteredQuestions([...questionsChapter8]);break;case'cap9':setFilteredQuestions([...questionsChapter9]);break;case'cap10':setFilteredQuestions([...questionsChapter10]);break;case'cap11':setFilteredQuestions([...questionsChapter11]);break;case'cap12':setFilteredQuestions([...questionsChapter12]);break;case'cap13':setFilteredQuestions([...questionsChapter13]);break;case'cap14':setFilteredQuestions([...questionsChapter14]);break;}return true;}query=query.toLowerCase();// Select the appropriate question set based on active chapter\nlet currentQuestions;switch(activeChapter){case'cap1':currentQuestions=questions;break;case'cap2':currentQuestions=questionsChapter2;break;case'cap3':currentQuestions=questionsChapter3;break;case'cap4':currentQuestions=questionsChapter4;break;case'cap5':currentQuestions=questionsChapter5;break;case'cap6':currentQuestions=questionsChapter6;break;case'cap7':currentQuestions=questionsChapter7;break;case'cap8':currentQuestions=questionsChapter8;break;case'cap9':currentQuestions=questionsChapter9;break;case'cap10':currentQuestions=questionsChapter10;break;case'cap11':currentQuestions=questionsChapter11;break;case'cap12':currentQuestions=questionsChapter12;break;case'cap13':currentQuestions=questionsChapter13;break;case'cap14':currentQuestions=questionsChapter14;break;default:currentQuestions=[];}const filtered=currentQuestions.filter(q=>{// Căutăm după numărul întrebării\nif(q.numar.toString()===query){return true;}// Căutăm în textul întrebării\nif(q.intrebare.toLowerCase().includes(query)){return true;}// Căutăm în variante\nfor(const text of Object.values(q.variante)){if(text.toLowerCase().includes(query)){return true;}}return false;});setFilteredQuestions(filtered);return filtered.length>0;};// Funcția pentru actualizarea statisticilor\nconst updateStats=isCorrect=>{setStats(prev=>({...prev,correctCount:isCorrect?prev.correctCount+1:prev.correctCount,totalCount:prev.totalCount+1}));};// Funcția pentru resetarea statisticilor\nconst resetStats=()=>{setStats(prev=>({...prev,correctCount:0,totalCount:0}));};// Funcția pentru toggle bookmark\nconst toggleBookmark=questionNumber=>{setBookmarkedQuestions(prev=>{const newBookmarks=new Set(prev);if(newBookmarks.has(questionNumber)){newBookmarks.delete(questionNumber);}else{newBookmarks.add(questionNumber);}return newBookmarks;});};if(isLoading){const loadedChapters=Object.values(chapterLoadingStates).filter(state=>!state).length;const totalChapters=Object.keys(chapterLoadingStates).length;return/*#__PURE__*/_jsx(LoadingOverlay,{progress:Math.round(loadedChapters/totalChapters*100),errors:chapterErrors});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[\"Eroare: \",error]});}// Prepare data for simulation mode\nconst allChaptersData={cap1:questions,cap2:questionsChapter2,cap3:questionsChapter3,cap4:questionsChapter4,cap5:questionsChapter5,cap6:questionsChapter6,cap7:questionsChapter7,cap8:questionsChapter8,cap9:questionsChapter9,cap10:questionsChapter10,cap11:questionsChapter11,cap12:questionsChapter12,cap13:questionsChapter13,cap14:questionsChapter14};const correctAnswersData={cap1:correctAnswers,cap2:correctAnswersChapter2,cap3:correctAnswersChapter3,cap4:correctAnswersChapter4,cap5:correctAnswersChapter5,cap6:correctAnswersChapter6,cap7:correctAnswersChapter7,cap8:correctAnswersChapter8,cap9:correctAnswersChapter9,cap10:correctAnswersChapter10,cap11:correctAnswersChapter11,cap12:correctAnswersChapter12,cap13:correctAnswersChapter13,cap14:correctAnswersChapter14};// Get the correct answers based on active chapter\nlet currentAnswers;let currentQuestionSet;switch(activeChapter){case'cap1':currentAnswers=correctAnswers;currentQuestionSet=questions;break;case'cap2':currentAnswers=correctAnswersChapter2;currentQuestionSet=questionsChapter2;break;case'cap3':currentAnswers=correctAnswersChapter3;currentQuestionSet=questionsChapter3;break;case'cap4':currentAnswers=correctAnswersChapter4;currentQuestionSet=questionsChapter4;break;case'cap5':currentAnswers=correctAnswersChapter5;currentQuestionSet=questionsChapter5;break;case'cap6':currentAnswers=correctAnswersChapter6;currentQuestionSet=questionsChapter6;break;case'cap7':currentAnswers=correctAnswersChapter7;currentQuestionSet=questionsChapter7;break;case'cap8':currentAnswers=correctAnswersChapter8;currentQuestionSet=questionsChapter8;break;case'cap9':currentAnswers=correctAnswersChapter9;currentQuestionSet=questionsChapter9;break;case'cap10':currentAnswers=correctAnswersChapter10;currentQuestionSet=questionsChapter10;break;case'cap11':currentAnswers=correctAnswersChapter11;currentQuestionSet=questionsChapter11;break;case'cap12':currentAnswers=correctAnswersChapter12;currentQuestionSet=questionsChapter12;break;case'cap13':currentAnswers=correctAnswersChapter13;currentQuestionSet=questionsChapter13;break;case'cap14':currentAnswers=correctAnswersChapter14;currentQuestionSet=questionsChapter14;break;default:currentAnswers={};currentQuestionSet=[];}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Grile Admitere Timisoara Biologie 2024\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"app-mode-selector\",children:[/*#__PURE__*/_jsx(\"button\",{className:`mode-btn ${appMode==='quiz'?'active':''}`,onClick:()=>switchAppMode('quiz'),children:\"Mod Quiz\"}),/*#__PURE__*/_jsx(\"button\",{className:`mode-btn ${appMode==='simulation'?'active':''}`,onClick:()=>switchAppMode('simulation'),children:\"Simulare Examen\"})]}),appMode==='quiz'&&/*#__PURE__*/_jsx(\"div\",{className:\"chapter-selector\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"chapter-dropdown\",value:activeChapter,onChange:e=>switchChapter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"cap1\",children:\"Capitolul 1\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cap2\",children:\"Capitolul 2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cap3\",children:\"Capitolul 3\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cap4\",children:\"Capitolul 4\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cap5\",children:\"Capitolul 5\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cap6\",children:\"Capitolul 6\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cap7\",children:\"Capitolul 7\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cap8\",children:\"Capitolul 8\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cap9\",children:\"Capitolul 9\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cap10\",children:\"Capitolul 10\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cap11\",children:\"Capitolul 11\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cap12\",children:\"Capitolul 12\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cap13\",children:\"Capitolul 13\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cap14\",children:\"Capitolul 14\"})]})})]}),/*#__PURE__*/_jsx(\"main\",{children:appMode==='quiz'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(QuizContainer,{questions:currentQuestionSet,filteredQuestions:filteredQuestions,correctAnswers:currentAnswers,bookmarkedQuestions:bookmarkedQuestions,updateStats:updateStats,toggleBookmark:toggleBookmark,searchQuestions:searchQuestions}),/*#__PURE__*/_jsx(Statistics,{correctCount:stats.correctCount,totalCount:stats.totalCount,bookmarkedCount:stats.bookmarkedCount,resetStats:resetStats})]}):/*#__PURE__*/_jsx(Simulation,{allChaptersData:allChaptersData,correctAnswersData:correctAnswersData,onExit:()=>switchAppMode('quiz')})}),/*#__PURE__*/_jsx(\"footer\",{className:\"App-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\xA9 2024 Grile Admitere Timisoara Biologie\"})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","QuizContainer","Statistics","LoadingOverlay","Simulation","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","isElectron","_window","window","electron","undefined","App","appMode","setAppMode","activeChapter","setActiveChapter","questions","setQuestions","questionsChapter2","setQuestionsChapter2","questionsChapter3","setQuestionsChapter3","questionsChapter4","setQuestionsChapter4","questionsChapter5","setQuestionsChapter5","questionsChapter6","setQuestionsChapter6","questionsChapter7","setQuestionsChapter7","questionsChapter8","setQuestionsChapter8","questionsChapter9","setQuestionsChapter9","questionsChapter10","setQuestionsChapter10","questionsChapter11","setQuestionsChapter11","questionsChapter12","setQuestionsChapter12","questionsChapter13","setQuestionsChapter13","questionsChapter14","setQuestionsChapter14","filteredQuestions","setFilteredQuestions","correctAnswers","setCorrectAnswers","correctAnswersChapter2","setCorrectAnswersChapter2","correctAnswersChapter3","setCorrectAnswersChapter3","correctAnswersChapter4","setCorrectAnswersChapter4","correctAnswersChapter5","setCorrectAnswersChapter5","correctAnswersChapter6","setCorrectAnswersChapter6","correctAnswersChapter7","setCorrectAnswersChapter7","correctAnswersChapter8","setCorrectAnswersChapter8","correctAnswersChapter9","setCorrectAnswersChapter9","correctAnswersChapter10","setCorrectAnswersChapter10","correctAnswersChapter11","setCorrectAnswersChapter11","correctAnswersChapter12","setCorrectAnswersChapter12","correctAnswersChapter13","setCorrectAnswersChapter13","correctAnswersChapter14","setCorrectAnswersChapter14","isLoading","setIsLoading","stats","setStats","correctCount","totalCount","bookmarkedCount","bookmarkedQuestions","setBookmarkedQuestions","Set","error","setError","chapterLoadingStates","setChapterLoadingStates","cap1","cap2","cap3","cap4","cap5","cap6","cap7","cap8","cap9","cap10","cap11","cap12","cap13","cap14","chapterErrors","setChapterErrors","setChapterLoading","chapter","prev","setChapterError","fetchChapterData","questionsData","answersData","ipcRenderer","invoke","questionsResponse","fetch","json","answersResponse","text","answers","split","forEach","item","parts","length","questionNumber","parseInt","answer","console","loadChapters","data1","data2","response1","response2","chaptersToLoad","loadChapterWithDelay","delay","Promise","resolve","setTimeout","promises","map","index","all","answersData2","fetchQuestionsChapter3","response","data","safeStorage","getItem","key","localStorage","e","setItem","value","savedBookmarks","bookmarks","JSON","parse","warn","size","stringify","switchAppMode","mode","switchChapter","resetStats","searchQuestions","query","trim","toLowerCase","currentQuestions","filtered","filter","q","numar","toString","intrebare","includes","Object","values","variante","updateStats","isCorrect","toggleBookmark","newBookmarks","has","delete","add","loadedChapters","state","totalChapters","keys","progress","Math","round","errors","className","children","allChaptersData","correctAnswersData","currentAnswers","currentQuestionSet","onClick","onChange","target","onExit"],"sources":["/Users/dragosudrea/repos/quiz-react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport QuizContainer from './components/QuizContainer';\r\nimport Statistics from './components/Statistics';\r\nimport LoadingOverlay from './components/LoadingOverlay';\r\nimport Simulation from './components/Simulation';\r\n\r\nconst isElectron = window?.electron !== undefined;\r\n\r\nfunction App() {\r\n  // State for app mode and chapter selection\r\n  const [appMode, setAppMode] = useState('quiz'); // 'quiz' or 'simulation'\r\n  const [activeChapter, setActiveChapter] = useState('cap1');\r\n  \r\n  // State for question sets\r\n  const [questions, setQuestions] = useState([]);\r\n  const [questionsChapter2, setQuestionsChapter2] = useState([]);\r\n  const [questionsChapter3, setQuestionsChapter3] = useState([]);\r\n  const [questionsChapter4, setQuestionsChapter4] = useState([]);\r\n  const [questionsChapter5, setQuestionsChapter5] = useState([]);\r\n  const [questionsChapter6, setQuestionsChapter6] = useState([]);\r\n  const [questionsChapter7, setQuestionsChapter7] = useState([]);\r\n  const [questionsChapter8, setQuestionsChapter8] = useState([]);\r\n  const [questionsChapter9, setQuestionsChapter9] = useState([]);\r\n  const [questionsChapter10, setQuestionsChapter10] = useState([]);\r\n  const [questionsChapter11, setQuestionsChapter11] = useState([]);\r\n  const [questionsChapter12, setQuestionsChapter12] = useState([]);\r\n  const [questionsChapter13, setQuestionsChapter13] = useState([]);\r\n  const [questionsChapter14, setQuestionsChapter14] = useState([]);\r\n  const [filteredQuestions, setFilteredQuestions] = useState([]);\r\n  \r\n  // State for correct answers from all chapters\r\n  const [correctAnswers, setCorrectAnswers] = useState({});\r\n  const [correctAnswersChapter2, setCorrectAnswersChapter2] = useState({});\r\n  const [correctAnswersChapter3, setCorrectAnswersChapter3] = useState({});\r\n  const [correctAnswersChapter4, setCorrectAnswersChapter4] = useState({});\r\n  const [correctAnswersChapter5, setCorrectAnswersChapter5] = useState({});\r\n  const [correctAnswersChapter6, setCorrectAnswersChapter6] = useState({});\r\n  const [correctAnswersChapter7, setCorrectAnswersChapter7] = useState({});\r\n  const [correctAnswersChapter8, setCorrectAnswersChapter8] = useState({});\r\n  const [correctAnswersChapter9, setCorrectAnswersChapter9] = useState({});\r\n  const [correctAnswersChapter10, setCorrectAnswersChapter10] = useState({});\r\n  const [correctAnswersChapter11, setCorrectAnswersChapter11] = useState({});\r\n  const [correctAnswersChapter12, setCorrectAnswersChapter12] = useState({});\r\n  const [correctAnswersChapter13, setCorrectAnswersChapter13] = useState({});\r\n  const [correctAnswersChapter14, setCorrectAnswersChapter14] = useState({});\r\n  \r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [stats, setStats] = useState({\r\n    correctCount: 0,\r\n    totalCount: 0,\r\n    bookmarkedCount: 0\r\n  });\r\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState(new Set());\r\n  const [error, setError] = useState(null);\r\n\r\n  // State for loading and errors per chapter\r\n  const [chapterLoadingStates, setChapterLoadingStates] = useState({\r\n    cap1: true,\r\n    cap2: true,\r\n    cap3: true,\r\n    cap4: true,\r\n    cap5: true,\r\n    cap6: true,\r\n    cap7: true,\r\n    cap8: true,\r\n    cap9: true,\r\n    cap10: true,\r\n    cap11: true,\r\n    cap12: true,\r\n    cap13: true,\r\n    cap14: true\r\n  });\r\n\r\n  const [chapterErrors, setChapterErrors] = useState({});\r\n\r\n  // Helper function to update loading state for a chapter\r\n  const setChapterLoading = (chapter, isLoading) => {\r\n    setChapterLoadingStates(prev => ({\r\n      ...prev,\r\n      [chapter]: isLoading\r\n    }));\r\n  };\r\n\r\n  // Helper function to update error state for a chapter\r\n  const setChapterError = (chapter, error) => {\r\n    setChapterErrors(prev => ({\r\n      ...prev,\r\n      [chapter]: error\r\n    }));\r\n  };\r\n\r\n  // Combined fetch function for questions and answers\r\n  const fetchChapterData = async (chapter) => {\r\n    setChapterLoading(chapter, true);\r\n    try {\r\n      // Fetch questions\r\n      let questionsData;\r\n      let answersData;\r\n\r\n      if (isElectron) {\r\n        // Use Electron IPC to load files\r\n        questionsData = await window.electron.ipcRenderer.invoke('read-file', `capitole/cap${chapter}.json`);\r\n        answersData = await window.electron.ipcRenderer.invoke('read-file', `capitole/cap${chapter}_raspunsuri`);\r\n      } else {\r\n        // Web browser fetch\r\n        const questionsResponse = await fetch(`/capitole/cap${chapter}.json`);\r\n        questionsData = await questionsResponse.json();\r\n        \r\n        const answersResponse = await fetch(`/capitole/cap${chapter}_raspunsuri`);\r\n        answersData = await answersResponse.text();\r\n      }\r\n      \r\n      // Process answers\r\n      const answers = {};\r\n      answersData.split('; ').forEach(item => {\r\n        const parts = item.split('.');\r\n        if (parts.length === 2) {\r\n          const questionNumber = parseInt(parts[0]);\r\n          const answer = parts[1];\r\n          answers[questionNumber] = answer;\r\n        }\r\n      });\r\n\r\n      // Update state based on chapter\r\n      switch(chapter) {\r\n        case 4:\r\n          setQuestionsChapter4(questionsData);\r\n          setCorrectAnswersChapter4(answers);\r\n          break;\r\n        case 5:\r\n          setQuestionsChapter5(questionsData);\r\n          setCorrectAnswersChapter5(answers);\r\n          break;\r\n        case 6:\r\n          setQuestionsChapter6(questionsData);\r\n          setCorrectAnswersChapter6(answers);\r\n          break;\r\n        case 7:\r\n          setQuestionsChapter7(questionsData);\r\n          setCorrectAnswersChapter7(answers);\r\n          break;\r\n        case 8:\r\n          setQuestionsChapter8(questionsData);\r\n          setCorrectAnswersChapter8(answers);\r\n          break;\r\n        case 9:\r\n          setQuestionsChapter9(questionsData);\r\n          setCorrectAnswersChapter9(answers);\r\n          break;\r\n        case 10:\r\n          setQuestionsChapter10(questionsData);\r\n          setCorrectAnswersChapter10(answers);\r\n          break;\r\n        case 11:\r\n          setQuestionsChapter11(questionsData);\r\n          setCorrectAnswersChapter11(answers);\r\n          break;\r\n        case 12:\r\n          setQuestionsChapter12(questionsData);\r\n          setCorrectAnswersChapter12(answers);\r\n          break;\r\n        case 13:\r\n          setQuestionsChapter13(questionsData);\r\n          setCorrectAnswersChapter13(answers);\r\n          break;\r\n        case 14:\r\n          setQuestionsChapter14(questionsData);\r\n          setCorrectAnswersChapter14(answers);\r\n          break;\r\n      }\r\n      setChapterError(chapter, null);\r\n    } catch (error) {\r\n      console.error(`Error loading chapter ${chapter}:`, error);\r\n      setChapterError(chapter, `Failed to load chapter ${chapter}`);\r\n    } finally {\r\n      setChapterLoading(chapter, false);\r\n    }\r\n  };\r\n\r\n  // Load all chapters data\r\n  useEffect(() => {\r\n    const loadChapters = async () => {\r\n      // Load chapters 1 and 2 first\r\n      try {\r\n        let data1, data2;\r\n        \r\n        if (isElectron) {\r\n          // Use Electron IPC to load files\r\n          data1 = await window.electron.ipcRenderer.invoke('read-file', 'capitole/cap1.json');\r\n          data2 = await window.electron.ipcRenderer.invoke('read-file', 'capitole/cap2.json');\r\n        } else {\r\n          // Web browser fetch\r\n          const response1 = await fetch('/capitole/cap1.json');\r\n          data1 = await response1.json();\r\n          const response2 = await fetch('/capitole/cap2.json');\r\n          data2 = await response2.json();\r\n        }\r\n        \r\n        setQuestions(data1);\r\n        setQuestionsChapter2(data2);\r\n        setChapterLoading('cap1', false);\r\n        setChapterLoading('cap2', false);\r\n      } catch (error) {\r\n        console.error('Error fetching chapters 1 and 2:', error);\r\n        setChapterError('cap1', 'Failed to load chapter 1');\r\n        setChapterError('cap2', 'Failed to load chapter 2');\r\n      }\r\n\r\n      // Then load chapters 4-14\r\n      const chaptersToLoad = [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\r\n      \r\n      const loadChapterWithDelay = async (chapter, delay) => {\r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n        await fetchChapterData(chapter);\r\n      };\r\n\r\n      const promises = chaptersToLoad.map((chapter, index) => \r\n        loadChapterWithDelay(chapter, index * 200)\r\n      );\r\n\r\n      await Promise.all(promises);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    loadChapters();\r\n  }, []);\r\n\r\n  // Încărcăm răspunsurile corecte pentru capitolul 1\r\n  useEffect(() => {\r\n    const answersData = \"1.ACE; 2.CDE; 3.ABE; 4.ABE; 5.ADE; 6.BDE; 7.ACD; 8.BDE; 9.ABDE; 10.ACE; 11.BDE; 12.ACD; 13.ADE; 14.ACD; 15.BDE; 16.ABCE; 17.AE; 18.BCDE; 19.BE; 20.CDE; 21.ABD; 22.ACE; 23.BCD; 24.ACD; 25.CDE; 26.ACD; 27.CE; 28.BD; 29.CDE; 30.ACD; 31.E; 32.ACD; 33.BDE; 34.ACDE; 35.BD; 36.ABCE; 37.BCE; 38.ACD; 39.BCE; 40.ABD; 41.CDE; 42.BD; 43.CDE; 44.ABE; 45.ABC; 46.BCD; 47.ABE; 48.ADE; 49.BCE; 50.ABD; 51.BCE; 52.BCE; 53.ACE; 54.ABD; 55.ACD; 56.AE; 57.ABE; 58.ACD; 59.ACDE; 60.ACE; 61.BDE; 62.ABE; 63.CD; 64.ABCD; 65.BCD; 66.ACE; 67.ACE; 68.ABD; 69.BDE; 70.ABC; 71.BCE; 72.BDE; 73.ACE; 74.BD; 75.ACDE; 76.ABD; 77.BCE; 78.ACE; 79.BCE; 80.ABCE; 81.ACD; 82.ACD; 83.BDE; 84.ABDE; 85.ABE 86.ACE; 87.ACE; 88.ABE; 89.AD; 90.BCD; 91.BDE; 92.BCE; 93.ACE; 94.ABE; 95.ADE; 96.ABC; 97.BE; 98.ABE; 99.ACDE; 100.ABE; 101.CDE; 102.ACD; 103.ADE; 104.ABD; 105.ACDE; 106.AD; 107.BDE; 108.ABE; 109.ACE; 110.CDE; 111.CDE; 112.ADE; 113.ACE; 114.ACE; 115.ACE; 116.ACD; 117.ACE; 118.BE; 119.ABCE; 120.ACE; 121.ACE; 122.BCD; 123.BCE; 124.ACE; 125.BDE; 126.AC; 127.CDE; 128.ADE; 129.CE; 130.ABD; 131.ACD; 132.BCE; 133.B; 134.BE; 135.ADE; 136.ABCE; 137.BC; 138.CDE; 139.ABE; 140.BDE; 141.ACD; 142.BCE; 143.BCE; 144.CDE; 145.BD; 146.ABDE; 147.ACE; 148.ABD; 149.BDE; 150.ACE; 151.ACDE; 152.BCD; 153.ADE; 154.CDE; 155.BCE; 156.AC; 157.ACD; 158.BDE; 159.BDE; 160.BCE; 161.ACD; 162.ACE; 163.AC; 164.ACD; 165.BCE; 166.ABCD; 167.CE; 168.ABCE; 169.ABCE; 170.BCE; 171.ACE; 172.BDE; 173.CDE; 174.ABE; 175.BCE; 176.ABE; 177.BDE; 178.ABD; 179.ACD; 180.BDE; 181.ADE; 182.CDE; 183.BDE; 184.ACE; 185.BCD; 186.ABE; 187.BCE; 188.BCD; 189.ADE; 190.ADE; 191.ACD; 192.BCD; 193.ACE; 194.BCD; 195.ADE; 196.ABE; 197.BCDE; 198.ACD; 199.BDE; 200.ADE\";\r\n    \r\n    const answers = {};\r\n    answersData.split('; ').forEach(item => {\r\n      const parts = item.split('.');\r\n      if (parts.length === 2) {\r\n        const questionNumber = parseInt(parts[0]);\r\n        const answer = parts[1];\r\n        answers[questionNumber] = answer;\r\n      }\r\n    });\r\n    \r\n    setCorrectAnswers(answers);\r\n  }, []);\r\n\r\n  // Încărcăm răspunsurile corecte pentru capitolul 2\r\n  useEffect(() => {\r\n    const answersData2 = \"1.ADE; 2.AE; 3.ABE; 4.ABE; 5.ACE; 6.ABE; 7.ADE; 8.BCD; 9.BDE; 10.ACE; 11.ADE; 12.BCE; 13.BDE; 14.BCD; 15.BDE; 16.ABD; 17.ACDE; 18.BD; 19.ACE; 20.ACD; 21.BE; 22.ABD; 23.CE; 24.ACD; 25.ABE; 26.ACD; 27.ACDE; 28.BCE; 29.BE; 30.ABE; 31.ADE; 32.CD; 33.BD; 34.D; 35.BD; 36.ABE; 37.BCD; 38.BDE; 39.ADE; 40.ADE; 41.ACE; 42.ACDE; 43.ABE; 44.ADE; 45.BD; 46.ABE; 47.CD; 48.AD; 49.BDE; 50.ACE; 51.BCE; 52.BCD; 53.BCDE; 54.C; 55.BCE; 56.AD; 57.ACE; 58.BCE; 59.ABD; 60.BCE; 61.ACE; 62.AD; 63.ABD; 64.ACE; 65.ACE; 66.ACDE; 67.ADE; 68.ABD; 69.BCD; 70.ACD; 71.BD; 72.ABE; 73.BCE; 74.AD; 75.ACE; 76.BCE; 77.ABE; 78.BC; 79.BDE; 80.BE; 81.CE; 82.ACD; 83.ABD; 84.ABDE; 85.BCD; 86.CD; 87.AE; 88.BCD; 89.ACE; 90.CE; 91.BCD; 92.ABE; 93.BDE; 94.ABE; 95.DE; 96.BCD; 97.ABD; 98.ACE; 99.BCE; 100.ACE; 101.BCD; 102.BDE; 103.BCD; 104.BCD; 105.BCE; 106.BDE; 107.ACE; 108.ADE; 109.ACE; 110.ACD; 111.ACDE; 112.BCE; 113.BCE; 114.BCE; 115.BCDE; 116.ABD; 117.ACE; 118.BE; 119.BD; 120.ACD; 121.ABE; 122.ACE; 123.BCE; 124.ABE; 125.ACE; 126.ACD; 127.ACD; 128.ABD; 129.BCE; 130.BCE; 131.D; 132.DE; 133.AD; 134.BCD; 135.BCE; 136.ABCE; 137.BDE; 138.BDE; 139.BCD; 140.BCE; 141.ACD; 142.BCE; 143.CDE; 144.ACDE; 145.BDE; 146.BCD; 147.CDE; 148.AD; 149.BC; 150.ACD; 151.ACE; 152.AD; 153.ACE; 154.ACDE; 155.BCD; 156.ABDE; 157.ABE; 158.BCD; 159.ABD; 160.BCD; 161.AD; 162.ADE; 163.BCD; 164.AC; 165.BDE; 166.CDE; 167.ABC; 168.ADE; 169.BC; 170.BDE; 171.BDE; 172.ADE; 173.BDE; 174.ABE; 175.BCD; 176.BCE; 177.BCD; 178.ACE; 179.ACE; 180.ACD; 181.ABDE; 182.BE; 183.ACE; 184.CE; 185.CDE; 186.ACDE; 187.ABE; 188.BCD; 189.ACE; 190.ACD\";\r\n    \r\n    const answers = {};\r\n    answersData2.split('; ').forEach(item => {\r\n      const parts = item.split('.');\r\n      if (parts.length === 2) {\r\n        const questionNumber = parseInt(parts[0]);\r\n        const answer = parts[1];\r\n        answers[questionNumber] = answer;\r\n      }\r\n    });\r\n    \r\n    setCorrectAnswersChapter2(answers);\r\n  }, []);\r\n\r\n  // Încărcăm răspunsurile corecte pentru capitolul 3\r\n  useEffect(() => {\r\n    const fetchQuestionsChapter3 = async () => {\r\n      try {\r\n        const response = await fetch('/cap3.json');\r\n        const data = await response.json();\r\n        setQuestionsChapter3(data);\r\n      } catch (error) {\r\n        console.error('Error fetching chapter 3:', error);\r\n        setError('Failed to load chapter 3 questions');\r\n      }\r\n    };\r\n\r\n    fetchQuestionsChapter3();\r\n  }, [questionsChapter2]); // Depends on chapter 2 loading to ensure proper ordering\r\n\r\n  // Helper function to safely interact with localStorage\r\n  const safeStorage = {\r\n    getItem: (key) => {\r\n      try {\r\n        return localStorage.getItem(key);\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    },\r\n    setItem: (key, value) => {\r\n      try {\r\n        localStorage.setItem(key, value);\r\n        return true;\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Încărcăm întrebările salvate din localStorage\r\n  useEffect(() => {\r\n    try {\r\n      const savedBookmarks = safeStorage.getItem('bookmarkedQuestions');\r\n      if (savedBookmarks) {\r\n        const bookmarks = JSON.parse(savedBookmarks);\r\n        setBookmarkedQuestions(new Set(bookmarks));\r\n        setStats(prev => ({\r\n          ...prev,\r\n          bookmarkedCount: bookmarks.length\r\n        }));\r\n      }\r\n    } catch (e) {\r\n      console.warn('Could not load bookmarks:', e);\r\n    }\r\n  }, []);\r\n\r\n  // Actualizăm numărul de întrebări salvate când se modifică bookmarkedQuestions\r\n  useEffect(() => {\r\n    setStats(prev => ({\r\n      ...prev,\r\n      bookmarkedCount: bookmarkedQuestions.size\r\n    }));\r\n    \r\n    // Salvăm întrebările marcate în localStorage\r\n    try {\r\n      safeStorage.setItem('bookmarkedQuestions', JSON.stringify([...bookmarkedQuestions]));\r\n    } catch (e) {\r\n      console.warn('Could not save bookmarks:', e);\r\n    }\r\n  }, [bookmarkedQuestions]);\r\n\r\n  // Funcția pentru schimbarea modului aplicației\r\n  const switchAppMode = (mode) => {\r\n    setAppMode(mode);\r\n  };\r\n\r\n  // Update switchChapter function to handle new chapters\r\n  const switchChapter = (chapter) => {\r\n    setActiveChapter(chapter);\r\n    switch(chapter) {\r\n      case 'cap1':\r\n        setFilteredQuestions(questions);\r\n        break;\r\n      case 'cap2':\r\n        setFilteredQuestions(questionsChapter2);\r\n        break;\r\n      case 'cap3':\r\n        setFilteredQuestions(questionsChapter3);\r\n        break;\r\n      case 'cap4':\r\n        setFilteredQuestions(questionsChapter4);\r\n        break;\r\n      case 'cap5':\r\n        setFilteredQuestions(questionsChapter5);\r\n        break;\r\n      case 'cap6':\r\n        setFilteredQuestions(questionsChapter6);\r\n        break;\r\n      case 'cap7':\r\n        setFilteredQuestions(questionsChapter7);\r\n        break;\r\n      case 'cap8':\r\n        setFilteredQuestions(questionsChapter8);\r\n        break;\r\n      case 'cap9':\r\n        setFilteredQuestions(questionsChapter9);\r\n        break;\r\n      case 'cap10':\r\n        setFilteredQuestions(questionsChapter10);\r\n        break;\r\n      case 'cap11':\r\n        setFilteredQuestions(questionsChapter11);\r\n        break;\r\n      case 'cap12':\r\n        setFilteredQuestions(questionsChapter12);\r\n        break;\r\n      case 'cap13':\r\n        setFilteredQuestions(questionsChapter13);\r\n        break;\r\n      case 'cap14':\r\n        setFilteredQuestions(questionsChapter14);\r\n        break;\r\n      default:\r\n        setFilteredQuestions([]);\r\n    }\r\n    resetStats();\r\n  };\r\n\r\n  // Funcția de căutare în întrebări\r\n  const searchQuestions = (query) => {\r\n    if (!query.trim()) {\r\n      // Reset based on active chapter\r\n      switch(activeChapter) {\r\n        case 'cap1':\r\n          setFilteredQuestions([...questions]);\r\n          break;\r\n        case 'cap2':\r\n          setFilteredQuestions([...questionsChapter2]);\r\n          break;\r\n        case 'cap3':\r\n          setFilteredQuestions([...questionsChapter3]);\r\n          break;\r\n        case 'cap4':\r\n          setFilteredQuestions([...questionsChapter4]);\r\n          break;\r\n        case 'cap5':\r\n          setFilteredQuestions([...questionsChapter5]);\r\n          break;\r\n        case 'cap6':\r\n          setFilteredQuestions([...questionsChapter6]);\r\n          break;\r\n        case 'cap7':\r\n          setFilteredQuestions([...questionsChapter7]);\r\n          break;\r\n        case 'cap8':\r\n          setFilteredQuestions([...questionsChapter8]);\r\n          break;\r\n        case 'cap9':\r\n          setFilteredQuestions([...questionsChapter9]);\r\n          break;\r\n        case 'cap10':\r\n          setFilteredQuestions([...questionsChapter10]);\r\n          break;\r\n        case 'cap11':\r\n          setFilteredQuestions([...questionsChapter11]);\r\n          break;\r\n        case 'cap12':\r\n          setFilteredQuestions([...questionsChapter12]);\r\n          break;\r\n        case 'cap13':\r\n          setFilteredQuestions([...questionsChapter13]);\r\n          break;\r\n        case 'cap14':\r\n          setFilteredQuestions([...questionsChapter14]);\r\n          break;\r\n      }\r\n      return true;\r\n    }\r\n    \r\n    query = query.toLowerCase();\r\n    \r\n    // Select the appropriate question set based on active chapter\r\n    let currentQuestions;\r\n    switch(activeChapter) {\r\n      case 'cap1':\r\n        currentQuestions = questions;\r\n        break;\r\n      case 'cap2':\r\n        currentQuestions = questionsChapter2;\r\n        break;\r\n      case 'cap3':\r\n        currentQuestions = questionsChapter3;\r\n        break;\r\n      case 'cap4':\r\n        currentQuestions = questionsChapter4;\r\n        break;\r\n      case 'cap5':\r\n        currentQuestions = questionsChapter5;\r\n        break;\r\n      case 'cap6':\r\n        currentQuestions = questionsChapter6;\r\n        break;\r\n      case 'cap7':\r\n        currentQuestions = questionsChapter7;\r\n        break;\r\n      case 'cap8':\r\n        currentQuestions = questionsChapter8;\r\n        break;\r\n      case 'cap9':\r\n        currentQuestions = questionsChapter9;\r\n        break;\r\n      case 'cap10':\r\n        currentQuestions = questionsChapter10;\r\n        break;\r\n      case 'cap11':\r\n        currentQuestions = questionsChapter11;\r\n        break;\r\n      case 'cap12':\r\n        currentQuestions = questionsChapter12;\r\n        break;\r\n      case 'cap13':\r\n        currentQuestions = questionsChapter13;\r\n        break;\r\n      case 'cap14':\r\n        currentQuestions = questionsChapter14;\r\n        break;\r\n      default:\r\n        currentQuestions = [];\r\n    }\r\n    \r\n    const filtered = currentQuestions.filter(q => {\r\n      // Căutăm după numărul întrebării\r\n      if (q.numar.toString() === query) {\r\n        return true;\r\n      }\r\n      \r\n      // Căutăm în textul întrebării\r\n      if (q.intrebare.toLowerCase().includes(query)) {\r\n        return true;\r\n      }\r\n      \r\n      // Căutăm în variante\r\n      for (const text of Object.values(q.variante)) {\r\n        if (text.toLowerCase().includes(query)) {\r\n          return true;\r\n        }\r\n      }\r\n      \r\n      return false;\r\n    });\r\n    \r\n    setFilteredQuestions(filtered);\r\n    \r\n    return filtered.length > 0;\r\n  };\r\n\r\n  // Funcția pentru actualizarea statisticilor\r\n  const updateStats = (isCorrect) => {\r\n    setStats(prev => ({\r\n      ...prev,\r\n      correctCount: isCorrect ? prev.correctCount + 1 : prev.correctCount,\r\n      totalCount: prev.totalCount + 1\r\n    }));\r\n  };\r\n\r\n  // Funcția pentru resetarea statisticilor\r\n  const resetStats = () => {\r\n    setStats(prev => ({\r\n      ...prev,\r\n      correctCount: 0,\r\n      totalCount: 0\r\n    }));\r\n  };\r\n\r\n  // Funcția pentru toggle bookmark\r\n  const toggleBookmark = (questionNumber) => {\r\n    setBookmarkedQuestions(prev => {\r\n      const newBookmarks = new Set(prev);\r\n      if (newBookmarks.has(questionNumber)) {\r\n        newBookmarks.delete(questionNumber);\r\n      } else {\r\n        newBookmarks.add(questionNumber);\r\n      }\r\n      return newBookmarks;\r\n    });\r\n  };\r\n\r\n  if (isLoading) {\r\n    const loadedChapters = Object.values(chapterLoadingStates).filter(state => !state).length;\r\n    const totalChapters = Object.keys(chapterLoadingStates).length;\r\n    return (\r\n      <LoadingOverlay \r\n        progress={Math.round((loadedChapters / totalChapters) * 100)} \r\n        errors={chapterErrors}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-message\">Eroare: {error}</div>;\r\n  }\r\n\r\n  // Prepare data for simulation mode\r\n  const allChaptersData = {\r\n    cap1: questions,\r\n    cap2: questionsChapter2,\r\n    cap3: questionsChapter3,\r\n    cap4: questionsChapter4,\r\n    cap5: questionsChapter5,\r\n    cap6: questionsChapter6,\r\n    cap7: questionsChapter7,\r\n    cap8: questionsChapter8,\r\n    cap9: questionsChapter9,\r\n    cap10: questionsChapter10,\r\n    cap11: questionsChapter11,\r\n    cap12: questionsChapter12,\r\n    cap13: questionsChapter13,\r\n    cap14: questionsChapter14\r\n  };\r\n  \r\n  const correctAnswersData = {\r\n    cap1: correctAnswers,\r\n    cap2: correctAnswersChapter2,\r\n    cap3: correctAnswersChapter3,\r\n    cap4: correctAnswersChapter4,\r\n    cap5: correctAnswersChapter5,\r\n    cap6: correctAnswersChapter6,\r\n    cap7: correctAnswersChapter7,\r\n    cap8: correctAnswersChapter8,\r\n    cap9: correctAnswersChapter9,\r\n    cap10: correctAnswersChapter10,\r\n    cap11: correctAnswersChapter11,\r\n    cap12: correctAnswersChapter12,\r\n    cap13: correctAnswersChapter13,\r\n    cap14: correctAnswersChapter14\r\n  };\r\n  \r\n  // Get the correct answers based on active chapter\r\n  let currentAnswers;\r\n  let currentQuestionSet;\r\n  \r\n  switch(activeChapter) {\r\n    case 'cap1':\r\n      currentAnswers = correctAnswers;\r\n      currentQuestionSet = questions;\r\n      break;\r\n    case 'cap2':\r\n      currentAnswers = correctAnswersChapter2;\r\n      currentQuestionSet = questionsChapter2;\r\n      break;\r\n    case 'cap3':\r\n      currentAnswers = correctAnswersChapter3;\r\n      currentQuestionSet = questionsChapter3;\r\n      break;\r\n    case 'cap4':\r\n      currentAnswers = correctAnswersChapter4;\r\n      currentQuestionSet = questionsChapter4;\r\n      break;\r\n    case 'cap5':\r\n      currentAnswers = correctAnswersChapter5;\r\n      currentQuestionSet = questionsChapter5;\r\n      break;\r\n    case 'cap6':\r\n      currentAnswers = correctAnswersChapter6;\r\n      currentQuestionSet = questionsChapter6;\r\n      break;\r\n    case 'cap7':\r\n      currentAnswers = correctAnswersChapter7;\r\n      currentQuestionSet = questionsChapter7;\r\n      break;\r\n    case 'cap8':\r\n      currentAnswers = correctAnswersChapter8;\r\n      currentQuestionSet = questionsChapter8;\r\n      break;\r\n    case 'cap9':\r\n      currentAnswers = correctAnswersChapter9;\r\n      currentQuestionSet = questionsChapter9;\r\n      break;\r\n    case 'cap10':\r\n      currentAnswers = correctAnswersChapter10;\r\n      currentQuestionSet = questionsChapter10;\r\n      break;\r\n    case 'cap11':\r\n      currentAnswers = correctAnswersChapter11;\r\n      currentQuestionSet = questionsChapter11;\r\n      break;\r\n    case 'cap12':\r\n      currentAnswers = correctAnswersChapter12;\r\n      currentQuestionSet = questionsChapter12;\r\n      break;\r\n    case 'cap13':\r\n      currentAnswers = correctAnswersChapter13;\r\n      currentQuestionSet = questionsChapter13;\r\n      break;\r\n    case 'cap14':\r\n      currentAnswers = correctAnswersChapter14;\r\n      currentQuestionSet = questionsChapter14;\r\n      break;\r\n    default:\r\n      currentAnswers = {};\r\n      currentQuestionSet = [];\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Grile Admitere Timisoara Biologie 2024</h1>\r\n        \r\n        <div className=\"app-mode-selector\">\r\n          <button \r\n            className={`mode-btn ${appMode === 'quiz' ? 'active' : ''}`}\r\n            onClick={() => switchAppMode('quiz')}\r\n          >\r\n            Mod Quiz\r\n          </button>\r\n          <button \r\n            className={`mode-btn ${appMode === 'simulation' ? 'active' : ''}`}\r\n            onClick={() => switchAppMode('simulation')}\r\n          >\r\n            Simulare Examen\r\n          </button>\r\n        </div>\r\n        \r\n        {appMode === 'quiz' && (\r\n          <div className=\"chapter-selector\">\r\n            <select \r\n              className=\"chapter-dropdown\"\r\n              value={activeChapter}\r\n              onChange={(e) => switchChapter(e.target.value)}\r\n            >\r\n              <option value=\"cap1\">Capitolul 1</option>\r\n              <option value=\"cap2\">Capitolul 2</option>\r\n              <option value=\"cap3\">Capitolul 3</option>\r\n              <option value=\"cap4\">Capitolul 4</option>\r\n              <option value=\"cap5\">Capitolul 5</option>\r\n              <option value=\"cap6\">Capitolul 6</option>\r\n              <option value=\"cap7\">Capitolul 7</option>\r\n              <option value=\"cap8\">Capitolul 8</option>\r\n              <option value=\"cap9\">Capitolul 9</option>\r\n              <option value=\"cap10\">Capitolul 10</option>\r\n              <option value=\"cap11\">Capitolul 11</option>\r\n              <option value=\"cap12\">Capitolul 12</option>\r\n              <option value=\"cap13\">Capitolul 13</option>\r\n              <option value=\"cap14\">Capitolul 14</option>\r\n            </select>\r\n          </div>\r\n        )}\r\n      </header>\r\n      \r\n      <main>\r\n        {appMode === 'quiz' ? (\r\n          <>\r\n            <QuizContainer\r\n              questions={currentQuestionSet}\r\n              filteredQuestions={filteredQuestions}\r\n              correctAnswers={currentAnswers}\r\n              bookmarkedQuestions={bookmarkedQuestions}\r\n              updateStats={updateStats}\r\n              toggleBookmark={toggleBookmark}\r\n              searchQuestions={searchQuestions}\r\n            />\r\n            <Statistics\r\n              correctCount={stats.correctCount}\r\n              totalCount={stats.totalCount}\r\n              bookmarkedCount={stats.bookmarkedCount}\r\n              resetStats={resetStats}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Simulation \r\n            allChaptersData={allChaptersData}\r\n            correctAnswersData={correctAnswersData}\r\n            onExit={() => switchAppMode('quiz')}\r\n          />\r\n        )}\r\n      </main>\r\n      \r\n      <footer className=\"App-footer\">\r\n        <p>© 2024 Grile Admitere Timisoara Biologie</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"YAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,WAAW,CAClB,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEjD,KAAM,CAAAC,UAAU,CAAG,EAAAC,OAAA,CAAAC,MAAM,UAAAD,OAAA,iBAANA,OAAA,CAAQE,QAAQ,IAAKC,SAAS,CAEjD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACA,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGnB,QAAQ,CAAC,MAAM,CAAC,CAAE;AAChD,KAAM,CAACoB,aAAa,CAAEC,gBAAgB,CAAC,CAAGrB,QAAQ,CAAC,MAAM,CAAC,CAE1D;AACA,KAAM,CAACsB,SAAS,CAAEC,YAAY,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACwB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAAC0B,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG3B,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAAC4B,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG7B,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAAC8B,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG/B,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACgC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGjC,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACkC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGnC,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACoC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGrC,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACsC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGvC,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACwC,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGzC,QAAQ,CAAC,EAAE,CAAC,CAChE,KAAM,CAAC0C,kBAAkB,CAAEC,qBAAqB,CAAC,CAAG3C,QAAQ,CAAC,EAAE,CAAC,CAChE,KAAM,CAAC4C,kBAAkB,CAAEC,qBAAqB,CAAC,CAAG7C,QAAQ,CAAC,EAAE,CAAC,CAChE,KAAM,CAAC8C,kBAAkB,CAAEC,qBAAqB,CAAC,CAAG/C,QAAQ,CAAC,EAAE,CAAC,CAChE,KAAM,CAACgD,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGjD,QAAQ,CAAC,EAAE,CAAC,CAChE,KAAM,CAACkD,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGnD,QAAQ,CAAC,EAAE,CAAC,CAE9D;AACA,KAAM,CAACoD,cAAc,CAAEC,iBAAiB,CAAC,CAAGrD,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxD,KAAM,CAACsD,sBAAsB,CAAEC,yBAAyB,CAAC,CAAGvD,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxE,KAAM,CAACwD,sBAAsB,CAAEC,yBAAyB,CAAC,CAAGzD,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxE,KAAM,CAAC0D,sBAAsB,CAAEC,yBAAyB,CAAC,CAAG3D,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxE,KAAM,CAAC4D,sBAAsB,CAAEC,yBAAyB,CAAC,CAAG7D,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxE,KAAM,CAAC8D,sBAAsB,CAAEC,yBAAyB,CAAC,CAAG/D,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxE,KAAM,CAACgE,sBAAsB,CAAEC,yBAAyB,CAAC,CAAGjE,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxE,KAAM,CAACkE,sBAAsB,CAAEC,yBAAyB,CAAC,CAAGnE,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxE,KAAM,CAACoE,sBAAsB,CAAEC,yBAAyB,CAAC,CAAGrE,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxE,KAAM,CAACsE,uBAAuB,CAAEC,0BAA0B,CAAC,CAAGvE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC1E,KAAM,CAACwE,uBAAuB,CAAEC,0BAA0B,CAAC,CAAGzE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC1E,KAAM,CAAC0E,uBAAuB,CAAEC,0BAA0B,CAAC,CAAG3E,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC1E,KAAM,CAAC4E,uBAAuB,CAAEC,0BAA0B,CAAC,CAAG7E,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC1E,KAAM,CAAC8E,uBAAuB,CAAEC,0BAA0B,CAAC,CAAG/E,QAAQ,CAAC,CAAC,CAAC,CAAC,CAE1E,KAAM,CAACgF,SAAS,CAAEC,YAAY,CAAC,CAAGjF,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACkF,KAAK,CAAEC,QAAQ,CAAC,CAAGnF,QAAQ,CAAC,CACjCoF,YAAY,CAAE,CAAC,CACfC,UAAU,CAAE,CAAC,CACbC,eAAe,CAAE,CACnB,CAAC,CAAC,CACF,KAAM,CAACC,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGxF,QAAQ,CAAC,GAAI,CAAAyF,GAAG,CAAC,CAAC,CAAC,CACzE,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAG3F,QAAQ,CAAC,IAAI,CAAC,CAExC;AACA,KAAM,CAAC4F,oBAAoB,CAAEC,uBAAuB,CAAC,CAAG7F,QAAQ,CAAC,CAC/D8F,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,IAAI,CACXC,KAAK,CAAE,IAAI,CACXC,KAAK,CAAE,IAAI,CACXC,KAAK,CAAE,IAAI,CACXC,KAAK,CAAE,IACT,CAAC,CAAC,CAEF,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAG7G,QAAQ,CAAC,CAAC,CAAC,CAAC,CAEtD;AACA,KAAM,CAAA8G,iBAAiB,CAAGA,CAACC,OAAO,CAAE/B,SAAS,GAAK,CAChDa,uBAAuB,CAACmB,IAAI,GAAK,CAC/B,GAAGA,IAAI,CACP,CAACD,OAAO,EAAG/B,SACb,CAAC,CAAC,CAAC,CACL,CAAC,CAED;AACA,KAAM,CAAAiC,eAAe,CAAGA,CAACF,OAAO,CAAErB,KAAK,GAAK,CAC1CmB,gBAAgB,CAACG,IAAI,GAAK,CACxB,GAAGA,IAAI,CACP,CAACD,OAAO,EAAGrB,KACb,CAAC,CAAC,CAAC,CACL,CAAC,CAED;AACA,KAAM,CAAAwB,gBAAgB,CAAG,KAAO,CAAAH,OAAO,EAAK,CAC1CD,iBAAiB,CAACC,OAAO,CAAE,IAAI,CAAC,CAChC,GAAI,CACF;AACA,GAAI,CAAAI,aAAa,CACjB,GAAI,CAAAC,WAAW,CAEf,GAAIxG,UAAU,CAAE,CACd;AACAuG,aAAa,CAAG,KAAM,CAAArG,MAAM,CAACC,QAAQ,CAACsG,WAAW,CAACC,MAAM,CAAC,WAAW,CAAE,eAAeP,OAAO,OAAO,CAAC,CACpGK,WAAW,CAAG,KAAM,CAAAtG,MAAM,CAACC,QAAQ,CAACsG,WAAW,CAACC,MAAM,CAAC,WAAW,CAAE,eAAeP,OAAO,aAAa,CAAC,CAC1G,CAAC,IAAM,CACL;AACA,KAAM,CAAAQ,iBAAiB,CAAG,KAAM,CAAAC,KAAK,CAAC,gBAAgBT,OAAO,OAAO,CAAC,CACrEI,aAAa,CAAG,KAAM,CAAAI,iBAAiB,CAACE,IAAI,CAAC,CAAC,CAE9C,KAAM,CAAAC,eAAe,CAAG,KAAM,CAAAF,KAAK,CAAC,gBAAgBT,OAAO,aAAa,CAAC,CACzEK,WAAW,CAAG,KAAM,CAAAM,eAAe,CAACC,IAAI,CAAC,CAAC,CAC5C,CAEA;AACA,KAAM,CAAAC,OAAO,CAAG,CAAC,CAAC,CAClBR,WAAW,CAACS,KAAK,CAAC,IAAI,CAAC,CAACC,OAAO,CAACC,IAAI,EAAI,CACtC,KAAM,CAAAC,KAAK,CAAGD,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC,CAC7B,GAAIG,KAAK,CAACC,MAAM,GAAK,CAAC,CAAE,CACtB,KAAM,CAAAC,cAAc,CAAGC,QAAQ,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC,CACzC,KAAM,CAAAI,MAAM,CAAGJ,KAAK,CAAC,CAAC,CAAC,CACvBJ,OAAO,CAACM,cAAc,CAAC,CAAGE,MAAM,CAClC,CACF,CAAC,CAAC,CAEF;AACA,OAAOrB,OAAO,EACZ,IAAK,EAAC,CACJlF,oBAAoB,CAACsF,aAAa,CAAC,CACnCxD,yBAAyB,CAACiE,OAAO,CAAC,CAClC,MACF,IAAK,EAAC,CACJ7F,oBAAoB,CAACoF,aAAa,CAAC,CACnCtD,yBAAyB,CAAC+D,OAAO,CAAC,CAClC,MACF,IAAK,EAAC,CACJ3F,oBAAoB,CAACkF,aAAa,CAAC,CACnCpD,yBAAyB,CAAC6D,OAAO,CAAC,CAClC,MACF,IAAK,EAAC,CACJzF,oBAAoB,CAACgF,aAAa,CAAC,CACnClD,yBAAyB,CAAC2D,OAAO,CAAC,CAClC,MACF,IAAK,EAAC,CACJvF,oBAAoB,CAAC8E,aAAa,CAAC,CACnChD,yBAAyB,CAACyD,OAAO,CAAC,CAClC,MACF,IAAK,EAAC,CACJrF,oBAAoB,CAAC4E,aAAa,CAAC,CACnC9C,yBAAyB,CAACuD,OAAO,CAAC,CAClC,MACF,IAAK,GAAE,CACLnF,qBAAqB,CAAC0E,aAAa,CAAC,CACpC5C,0BAA0B,CAACqD,OAAO,CAAC,CACnC,MACF,IAAK,GAAE,CACLjF,qBAAqB,CAACwE,aAAa,CAAC,CACpC1C,0BAA0B,CAACmD,OAAO,CAAC,CACnC,MACF,IAAK,GAAE,CACL/E,qBAAqB,CAACsE,aAAa,CAAC,CACpCxC,0BAA0B,CAACiD,OAAO,CAAC,CACnC,MACF,IAAK,GAAE,CACL7E,qBAAqB,CAACoE,aAAa,CAAC,CACpCtC,0BAA0B,CAAC+C,OAAO,CAAC,CACnC,MACF,IAAK,GAAE,CACL3E,qBAAqB,CAACkE,aAAa,CAAC,CACpCpC,0BAA0B,CAAC6C,OAAO,CAAC,CACnC,MACJ,CACAX,eAAe,CAACF,OAAO,CAAE,IAAI,CAAC,CAChC,CAAE,MAAOrB,KAAK,CAAE,CACd2C,OAAO,CAAC3C,KAAK,CAAC,yBAAyBqB,OAAO,GAAG,CAAErB,KAAK,CAAC,CACzDuB,eAAe,CAACF,OAAO,CAAE,0BAA0BA,OAAO,EAAE,CAAC,CAC/D,CAAC,OAAS,CACRD,iBAAiB,CAACC,OAAO,CAAE,KAAK,CAAC,CACnC,CACF,CAAC,CAED;AACA9G,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqI,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B;AACA,GAAI,CACF,GAAI,CAAAC,KAAK,CAAEC,KAAK,CAEhB,GAAI5H,UAAU,CAAE,CACd;AACA2H,KAAK,CAAG,KAAM,CAAAzH,MAAM,CAACC,QAAQ,CAACsG,WAAW,CAACC,MAAM,CAAC,WAAW,CAAE,oBAAoB,CAAC,CACnFkB,KAAK,CAAG,KAAM,CAAA1H,MAAM,CAACC,QAAQ,CAACsG,WAAW,CAACC,MAAM,CAAC,WAAW,CAAE,oBAAoB,CAAC,CACrF,CAAC,IAAM,CACL;AACA,KAAM,CAAAmB,SAAS,CAAG,KAAM,CAAAjB,KAAK,CAAC,qBAAqB,CAAC,CACpDe,KAAK,CAAG,KAAM,CAAAE,SAAS,CAAChB,IAAI,CAAC,CAAC,CAC9B,KAAM,CAAAiB,SAAS,CAAG,KAAM,CAAAlB,KAAK,CAAC,qBAAqB,CAAC,CACpDgB,KAAK,CAAG,KAAM,CAAAE,SAAS,CAACjB,IAAI,CAAC,CAAC,CAChC,CAEAlG,YAAY,CAACgH,KAAK,CAAC,CACnB9G,oBAAoB,CAAC+G,KAAK,CAAC,CAC3B1B,iBAAiB,CAAC,MAAM,CAAE,KAAK,CAAC,CAChCA,iBAAiB,CAAC,MAAM,CAAE,KAAK,CAAC,CAClC,CAAE,MAAOpB,KAAK,CAAE,CACd2C,OAAO,CAAC3C,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAAC,CACxDuB,eAAe,CAAC,MAAM,CAAE,0BAA0B,CAAC,CACnDA,eAAe,CAAC,MAAM,CAAE,0BAA0B,CAAC,CACrD,CAEA;AACA,KAAM,CAAA0B,cAAc,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAE7D,KAAM,CAAAC,oBAAoB,CAAG,KAAAA,CAAO7B,OAAO,CAAE8B,KAAK,GAAK,CACrD,KAAM,IAAI,CAAAC,OAAO,CAACC,OAAO,EAAIC,UAAU,CAACD,OAAO,CAAEF,KAAK,CAAC,CAAC,CACxD,KAAM,CAAA3B,gBAAgB,CAACH,OAAO,CAAC,CACjC,CAAC,CAED,KAAM,CAAAkC,QAAQ,CAAGN,cAAc,CAACO,GAAG,CAAC,CAACnC,OAAO,CAAEoC,KAAK,GACjDP,oBAAoB,CAAC7B,OAAO,CAAEoC,KAAK,CAAG,GAAG,CAC3C,CAAC,CAED,KAAM,CAAAL,OAAO,CAACM,GAAG,CAACH,QAAQ,CAAC,CAC3BhE,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CAEDqD,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN;AACArI,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmH,WAAW,CAAG,spDAAspD,CAE1qD,KAAM,CAAAQ,OAAO,CAAG,CAAC,CAAC,CAClBR,WAAW,CAACS,KAAK,CAAC,IAAI,CAAC,CAACC,OAAO,CAACC,IAAI,EAAI,CACtC,KAAM,CAAAC,KAAK,CAAGD,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC,CAC7B,GAAIG,KAAK,CAACC,MAAM,GAAK,CAAC,CAAE,CACtB,KAAM,CAAAC,cAAc,CAAGC,QAAQ,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC,CACzC,KAAM,CAAAI,MAAM,CAAGJ,KAAK,CAAC,CAAC,CAAC,CACvBJ,OAAO,CAACM,cAAc,CAAC,CAAGE,MAAM,CAClC,CACF,CAAC,CAAC,CAEF/E,iBAAiB,CAACuE,OAAO,CAAC,CAC5B,CAAC,CAAE,EAAE,CAAC,CAEN;AACA3H,SAAS,CAAC,IAAM,CACd,KAAM,CAAAoJ,YAAY,CAAG,wiDAAwiD,CAE7jD,KAAM,CAAAzB,OAAO,CAAG,CAAC,CAAC,CAClByB,YAAY,CAACxB,KAAK,CAAC,IAAI,CAAC,CAACC,OAAO,CAACC,IAAI,EAAI,CACvC,KAAM,CAAAC,KAAK,CAAGD,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC,CAC7B,GAAIG,KAAK,CAACC,MAAM,GAAK,CAAC,CAAE,CACtB,KAAM,CAAAC,cAAc,CAAGC,QAAQ,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC,CACzC,KAAM,CAAAI,MAAM,CAAGJ,KAAK,CAAC,CAAC,CAAC,CACvBJ,OAAO,CAACM,cAAc,CAAC,CAAGE,MAAM,CAClC,CACF,CAAC,CAAC,CAEF7E,yBAAyB,CAACqE,OAAO,CAAC,CACpC,CAAC,CAAE,EAAE,CAAC,CAEN;AACA3H,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqJ,sBAAsB,CAAG,KAAAA,CAAA,GAAY,CACzC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA/B,KAAK,CAAC,YAAY,CAAC,CAC1C,KAAM,CAAAgC,IAAI,CAAG,KAAM,CAAAD,QAAQ,CAAC9B,IAAI,CAAC,CAAC,CAClC9F,oBAAoB,CAAC6H,IAAI,CAAC,CAC5B,CAAE,MAAO9D,KAAK,CAAE,CACd2C,OAAO,CAAC3C,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjDC,QAAQ,CAAC,oCAAoC,CAAC,CAChD,CACF,CAAC,CAED2D,sBAAsB,CAAC,CAAC,CAC1B,CAAC,CAAE,CAAC9H,iBAAiB,CAAC,CAAC,CAAE;AAEzB;AACA,KAAM,CAAAiI,WAAW,CAAG,CAClBC,OAAO,CAAGC,GAAG,EAAK,CAChB,GAAI,CACF,MAAO,CAAAC,YAAY,CAACF,OAAO,CAACC,GAAG,CAAC,CAClC,CAAE,MAAOE,CAAC,CAAE,CACV,MAAO,KAAI,CACb,CACF,CAAC,CACDC,OAAO,CAAEA,CAACH,GAAG,CAAEI,KAAK,GAAK,CACvB,GAAI,CACFH,YAAY,CAACE,OAAO,CAACH,GAAG,CAAEI,KAAK,CAAC,CAChC,MAAO,KAAI,CACb,CAAE,MAAOF,CAAC,CAAE,CACV,MAAO,MAAK,CACd,CACF,CACF,CAAC,CAED;AACA5J,SAAS,CAAC,IAAM,CACd,GAAI,CACF,KAAM,CAAA+J,cAAc,CAAGP,WAAW,CAACC,OAAO,CAAC,qBAAqB,CAAC,CACjE,GAAIM,cAAc,CAAE,CAClB,KAAM,CAAAC,SAAS,CAAGC,IAAI,CAACC,KAAK,CAACH,cAAc,CAAC,CAC5CxE,sBAAsB,CAAC,GAAI,CAAAC,GAAG,CAACwE,SAAS,CAAC,CAAC,CAC1C9E,QAAQ,CAAC6B,IAAI,GAAK,CAChB,GAAGA,IAAI,CACP1B,eAAe,CAAE2E,SAAS,CAAChC,MAC7B,CAAC,CAAC,CAAC,CACL,CACF,CAAE,MAAO4B,CAAC,CAAE,CACVxB,OAAO,CAAC+B,IAAI,CAAC,2BAA2B,CAAEP,CAAC,CAAC,CAC9C,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA5J,SAAS,CAAC,IAAM,CACdkF,QAAQ,CAAC6B,IAAI,GAAK,CAChB,GAAGA,IAAI,CACP1B,eAAe,CAAEC,mBAAmB,CAAC8E,IACvC,CAAC,CAAC,CAAC,CAEH;AACA,GAAI,CACFZ,WAAW,CAACK,OAAO,CAAC,qBAAqB,CAAEI,IAAI,CAACI,SAAS,CAAC,CAAC,GAAG/E,mBAAmB,CAAC,CAAC,CAAC,CACtF,CAAE,MAAOsE,CAAC,CAAE,CACVxB,OAAO,CAAC+B,IAAI,CAAC,2BAA2B,CAAEP,CAAC,CAAC,CAC9C,CACF,CAAC,CAAE,CAACtE,mBAAmB,CAAC,CAAC,CAEzB;AACA,KAAM,CAAAgF,aAAa,CAAIC,IAAI,EAAK,CAC9BrJ,UAAU,CAACqJ,IAAI,CAAC,CAClB,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAI1D,OAAO,EAAK,CACjC1F,gBAAgB,CAAC0F,OAAO,CAAC,CACzB,OAAOA,OAAO,EACZ,IAAK,MAAM,CACT5D,oBAAoB,CAAC7B,SAAS,CAAC,CAC/B,MACF,IAAK,MAAM,CACT6B,oBAAoB,CAAC3B,iBAAiB,CAAC,CACvC,MACF,IAAK,MAAM,CACT2B,oBAAoB,CAACzB,iBAAiB,CAAC,CACvC,MACF,IAAK,MAAM,CACTyB,oBAAoB,CAACvB,iBAAiB,CAAC,CACvC,MACF,IAAK,MAAM,CACTuB,oBAAoB,CAACrB,iBAAiB,CAAC,CACvC,MACF,IAAK,MAAM,CACTqB,oBAAoB,CAACnB,iBAAiB,CAAC,CACvC,MACF,IAAK,MAAM,CACTmB,oBAAoB,CAACjB,iBAAiB,CAAC,CACvC,MACF,IAAK,MAAM,CACTiB,oBAAoB,CAACf,iBAAiB,CAAC,CACvC,MACF,IAAK,MAAM,CACTe,oBAAoB,CAACb,iBAAiB,CAAC,CACvC,MACF,IAAK,OAAO,CACVa,oBAAoB,CAACX,kBAAkB,CAAC,CACxC,MACF,IAAK,OAAO,CACVW,oBAAoB,CAACT,kBAAkB,CAAC,CACxC,MACF,IAAK,OAAO,CACVS,oBAAoB,CAACP,kBAAkB,CAAC,CACxC,MACF,IAAK,OAAO,CACVO,oBAAoB,CAACL,kBAAkB,CAAC,CACxC,MACF,IAAK,OAAO,CACVK,oBAAoB,CAACH,kBAAkB,CAAC,CACxC,MACF,QACEG,oBAAoB,CAAC,EAAE,CAAC,CAC5B,CACAuH,UAAU,CAAC,CAAC,CACd,CAAC,CAED;AACA,KAAM,CAAAC,eAAe,CAAIC,KAAK,EAAK,CACjC,GAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAE,CACjB;AACA,OAAOzJ,aAAa,EAClB,IAAK,MAAM,CACT+B,oBAAoB,CAAC,CAAC,GAAG7B,SAAS,CAAC,CAAC,CACpC,MACF,IAAK,MAAM,CACT6B,oBAAoB,CAAC,CAAC,GAAG3B,iBAAiB,CAAC,CAAC,CAC5C,MACF,IAAK,MAAM,CACT2B,oBAAoB,CAAC,CAAC,GAAGzB,iBAAiB,CAAC,CAAC,CAC5C,MACF,IAAK,MAAM,CACTyB,oBAAoB,CAAC,CAAC,GAAGvB,iBAAiB,CAAC,CAAC,CAC5C,MACF,IAAK,MAAM,CACTuB,oBAAoB,CAAC,CAAC,GAAGrB,iBAAiB,CAAC,CAAC,CAC5C,MACF,IAAK,MAAM,CACTqB,oBAAoB,CAAC,CAAC,GAAGnB,iBAAiB,CAAC,CAAC,CAC5C,MACF,IAAK,MAAM,CACTmB,oBAAoB,CAAC,CAAC,GAAGjB,iBAAiB,CAAC,CAAC,CAC5C,MACF,IAAK,MAAM,CACTiB,oBAAoB,CAAC,CAAC,GAAGf,iBAAiB,CAAC,CAAC,CAC5C,MACF,IAAK,MAAM,CACTe,oBAAoB,CAAC,CAAC,GAAGb,iBAAiB,CAAC,CAAC,CAC5C,MACF,IAAK,OAAO,CACVa,oBAAoB,CAAC,CAAC,GAAGX,kBAAkB,CAAC,CAAC,CAC7C,MACF,IAAK,OAAO,CACVW,oBAAoB,CAAC,CAAC,GAAGT,kBAAkB,CAAC,CAAC,CAC7C,MACF,IAAK,OAAO,CACVS,oBAAoB,CAAC,CAAC,GAAGP,kBAAkB,CAAC,CAAC,CAC7C,MACF,IAAK,OAAO,CACVO,oBAAoB,CAAC,CAAC,GAAGL,kBAAkB,CAAC,CAAC,CAC7C,MACF,IAAK,OAAO,CACVK,oBAAoB,CAAC,CAAC,GAAGH,kBAAkB,CAAC,CAAC,CAC7C,MACJ,CACA,MAAO,KAAI,CACb,CAEA4H,KAAK,CAAGA,KAAK,CAACE,WAAW,CAAC,CAAC,CAE3B;AACA,GAAI,CAAAC,gBAAgB,CACpB,OAAO3J,aAAa,EAClB,IAAK,MAAM,CACT2J,gBAAgB,CAAGzJ,SAAS,CAC5B,MACF,IAAK,MAAM,CACTyJ,gBAAgB,CAAGvJ,iBAAiB,CACpC,MACF,IAAK,MAAM,CACTuJ,gBAAgB,CAAGrJ,iBAAiB,CACpC,MACF,IAAK,MAAM,CACTqJ,gBAAgB,CAAGnJ,iBAAiB,CACpC,MACF,IAAK,MAAM,CACTmJ,gBAAgB,CAAGjJ,iBAAiB,CACpC,MACF,IAAK,MAAM,CACTiJ,gBAAgB,CAAG/I,iBAAiB,CACpC,MACF,IAAK,MAAM,CACT+I,gBAAgB,CAAG7I,iBAAiB,CACpC,MACF,IAAK,MAAM,CACT6I,gBAAgB,CAAG3I,iBAAiB,CACpC,MACF,IAAK,MAAM,CACT2I,gBAAgB,CAAGzI,iBAAiB,CACpC,MACF,IAAK,OAAO,CACVyI,gBAAgB,CAAGvI,kBAAkB,CACrC,MACF,IAAK,OAAO,CACVuI,gBAAgB,CAAGrI,kBAAkB,CACrC,MACF,IAAK,OAAO,CACVqI,gBAAgB,CAAGnI,kBAAkB,CACrC,MACF,IAAK,OAAO,CACVmI,gBAAgB,CAAGjI,kBAAkB,CACrC,MACF,IAAK,OAAO,CACViI,gBAAgB,CAAG/H,kBAAkB,CACrC,MACF,QACE+H,gBAAgB,CAAG,EAAE,CACzB,CAEA,KAAM,CAAAC,QAAQ,CAAGD,gBAAgB,CAACE,MAAM,CAACC,CAAC,EAAI,CAC5C;AACA,GAAIA,CAAC,CAACC,KAAK,CAACC,QAAQ,CAAC,CAAC,GAAKR,KAAK,CAAE,CAChC,MAAO,KAAI,CACb,CAEA;AACA,GAAIM,CAAC,CAACG,SAAS,CAACP,WAAW,CAAC,CAAC,CAACQ,QAAQ,CAACV,KAAK,CAAC,CAAE,CAC7C,MAAO,KAAI,CACb,CAEA;AACA,IAAK,KAAM,CAAAjD,IAAI,GAAI,CAAA4D,MAAM,CAACC,MAAM,CAACN,CAAC,CAACO,QAAQ,CAAC,CAAE,CAC5C,GAAI9D,IAAI,CAACmD,WAAW,CAAC,CAAC,CAACQ,QAAQ,CAACV,KAAK,CAAC,CAAE,CACtC,MAAO,KAAI,CACb,CACF,CAEA,MAAO,MAAK,CACd,CAAC,CAAC,CAEFzH,oBAAoB,CAAC6H,QAAQ,CAAC,CAE9B,MAAO,CAAAA,QAAQ,CAAC/C,MAAM,CAAG,CAAC,CAC5B,CAAC,CAED;AACA,KAAM,CAAAyD,WAAW,CAAIC,SAAS,EAAK,CACjCxG,QAAQ,CAAC6B,IAAI,GAAK,CAChB,GAAGA,IAAI,CACP5B,YAAY,CAAEuG,SAAS,CAAG3E,IAAI,CAAC5B,YAAY,CAAG,CAAC,CAAG4B,IAAI,CAAC5B,YAAY,CACnEC,UAAU,CAAE2B,IAAI,CAAC3B,UAAU,CAAG,CAChC,CAAC,CAAC,CAAC,CACL,CAAC,CAED;AACA,KAAM,CAAAqF,UAAU,CAAGA,CAAA,GAAM,CACvBvF,QAAQ,CAAC6B,IAAI,GAAK,CAChB,GAAGA,IAAI,CACP5B,YAAY,CAAE,CAAC,CACfC,UAAU,CAAE,CACd,CAAC,CAAC,CAAC,CACL,CAAC,CAED;AACA,KAAM,CAAAuG,cAAc,CAAI1D,cAAc,EAAK,CACzC1C,sBAAsB,CAACwB,IAAI,EAAI,CAC7B,KAAM,CAAA6E,YAAY,CAAG,GAAI,CAAApG,GAAG,CAACuB,IAAI,CAAC,CAClC,GAAI6E,YAAY,CAACC,GAAG,CAAC5D,cAAc,CAAC,CAAE,CACpC2D,YAAY,CAACE,MAAM,CAAC7D,cAAc,CAAC,CACrC,CAAC,IAAM,CACL2D,YAAY,CAACG,GAAG,CAAC9D,cAAc,CAAC,CAClC,CACA,MAAO,CAAA2D,YAAY,CACrB,CAAC,CAAC,CACJ,CAAC,CAED,GAAI7G,SAAS,CAAE,CACb,KAAM,CAAAiH,cAAc,CAAGV,MAAM,CAACC,MAAM,CAAC5F,oBAAoB,CAAC,CAACqF,MAAM,CAACiB,KAAK,EAAI,CAACA,KAAK,CAAC,CAACjE,MAAM,CACzF,KAAM,CAAAkE,aAAa,CAAGZ,MAAM,CAACa,IAAI,CAACxG,oBAAoB,CAAC,CAACqC,MAAM,CAC9D,mBACE1H,IAAA,CAACH,cAAc,EACbiM,QAAQ,CAAEC,IAAI,CAACC,KAAK,CAAEN,cAAc,CAAGE,aAAa,CAAI,GAAG,CAAE,CAC7DK,MAAM,CAAE5F,aAAc,CACvB,CAAC,CAEN,CAEA,GAAIlB,KAAK,CAAE,CACT,mBAAOjF,KAAA,QAAKgM,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAC,UAAQ,CAAChH,KAAK,EAAM,CAAC,CAC7D,CAEA;AACA,KAAM,CAAAiH,eAAe,CAAG,CACtB7G,IAAI,CAAExE,SAAS,CACfyE,IAAI,CAAEvE,iBAAiB,CACvBwE,IAAI,CAAEtE,iBAAiB,CACvBuE,IAAI,CAAErE,iBAAiB,CACvBsE,IAAI,CAAEpE,iBAAiB,CACvBqE,IAAI,CAAEnE,iBAAiB,CACvBoE,IAAI,CAAElE,iBAAiB,CACvBmE,IAAI,CAAEjE,iBAAiB,CACvBkE,IAAI,CAAEhE,iBAAiB,CACvBiE,KAAK,CAAE/D,kBAAkB,CACzBgE,KAAK,CAAE9D,kBAAkB,CACzB+D,KAAK,CAAE7D,kBAAkB,CACzB8D,KAAK,CAAE5D,kBAAkB,CACzB6D,KAAK,CAAE3D,kBACT,CAAC,CAED,KAAM,CAAA4J,kBAAkB,CAAG,CACzB9G,IAAI,CAAE1C,cAAc,CACpB2C,IAAI,CAAEzC,sBAAsB,CAC5B0C,IAAI,CAAExC,sBAAsB,CAC5ByC,IAAI,CAAEvC,sBAAsB,CAC5BwC,IAAI,CAAEtC,sBAAsB,CAC5BuC,IAAI,CAAErC,sBAAsB,CAC5BsC,IAAI,CAAEpC,sBAAsB,CAC5BqC,IAAI,CAAEnC,sBAAsB,CAC5BoC,IAAI,CAAElC,sBAAsB,CAC5BmC,KAAK,CAAEjC,uBAAuB,CAC9BkC,KAAK,CAAEhC,uBAAuB,CAC9BiC,KAAK,CAAE/B,uBAAuB,CAC9BgC,KAAK,CAAE9B,uBAAuB,CAC9B+B,KAAK,CAAE7B,uBACT,CAAC,CAED;AACA,GAAI,CAAA+H,cAAc,CAClB,GAAI,CAAAC,kBAAkB,CAEtB,OAAO1L,aAAa,EAClB,IAAK,MAAM,CACTyL,cAAc,CAAGzJ,cAAc,CAC/B0J,kBAAkB,CAAGxL,SAAS,CAC9B,MACF,IAAK,MAAM,CACTuL,cAAc,CAAGvJ,sBAAsB,CACvCwJ,kBAAkB,CAAGtL,iBAAiB,CACtC,MACF,IAAK,MAAM,CACTqL,cAAc,CAAGrJ,sBAAsB,CACvCsJ,kBAAkB,CAAGpL,iBAAiB,CACtC,MACF,IAAK,MAAM,CACTmL,cAAc,CAAGnJ,sBAAsB,CACvCoJ,kBAAkB,CAAGlL,iBAAiB,CACtC,MACF,IAAK,MAAM,CACTiL,cAAc,CAAGjJ,sBAAsB,CACvCkJ,kBAAkB,CAAGhL,iBAAiB,CACtC,MACF,IAAK,MAAM,CACT+K,cAAc,CAAG/I,sBAAsB,CACvCgJ,kBAAkB,CAAG9K,iBAAiB,CACtC,MACF,IAAK,MAAM,CACT6K,cAAc,CAAG7I,sBAAsB,CACvC8I,kBAAkB,CAAG5K,iBAAiB,CACtC,MACF,IAAK,MAAM,CACT2K,cAAc,CAAG3I,sBAAsB,CACvC4I,kBAAkB,CAAG1K,iBAAiB,CACtC,MACF,IAAK,MAAM,CACTyK,cAAc,CAAGzI,sBAAsB,CACvC0I,kBAAkB,CAAGxK,iBAAiB,CACtC,MACF,IAAK,OAAO,CACVuK,cAAc,CAAGvI,uBAAuB,CACxCwI,kBAAkB,CAAGtK,kBAAkB,CACvC,MACF,IAAK,OAAO,CACVqK,cAAc,CAAGrI,uBAAuB,CACxCsI,kBAAkB,CAAGpK,kBAAkB,CACvC,MACF,IAAK,OAAO,CACVmK,cAAc,CAAGnI,uBAAuB,CACxCoI,kBAAkB,CAAGlK,kBAAkB,CACvC,MACF,IAAK,OAAO,CACViK,cAAc,CAAGjI,uBAAuB,CACxCkI,kBAAkB,CAAGhK,kBAAkB,CACvC,MACF,IAAK,OAAO,CACV+J,cAAc,CAAG/H,uBAAuB,CACxCgI,kBAAkB,CAAG9J,kBAAkB,CACvC,MACF,QACE6J,cAAc,CAAG,CAAC,CAAC,CACnBC,kBAAkB,CAAG,EAAE,CAC3B,CAEA,mBACErM,KAAA,QAAKgM,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBjM,KAAA,WAAQgM,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC5BnM,IAAA,OAAAmM,QAAA,CAAI,wCAAsC,CAAI,CAAC,cAE/CjM,KAAA,QAAKgM,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCnM,IAAA,WACEkM,SAAS,CAAE,YAAYvL,OAAO,GAAK,MAAM,CAAG,QAAQ,CAAG,EAAE,EAAG,CAC5D6L,OAAO,CAAEA,CAAA,GAAMxC,aAAa,CAAC,MAAM,CAAE,CAAAmC,QAAA,CACtC,UAED,CAAQ,CAAC,cACTnM,IAAA,WACEkM,SAAS,CAAE,YAAYvL,OAAO,GAAK,YAAY,CAAG,QAAQ,CAAG,EAAE,EAAG,CAClE6L,OAAO,CAAEA,CAAA,GAAMxC,aAAa,CAAC,YAAY,CAAE,CAAAmC,QAAA,CAC5C,iBAED,CAAQ,CAAC,EACN,CAAC,CAELxL,OAAO,GAAK,MAAM,eACjBX,IAAA,QAAKkM,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BjM,KAAA,WACEgM,SAAS,CAAC,kBAAkB,CAC5B1C,KAAK,CAAE3I,aAAc,CACrB4L,QAAQ,CAAGnD,CAAC,EAAKY,aAAa,CAACZ,CAAC,CAACoD,MAAM,CAAClD,KAAK,CAAE,CAAA2C,QAAA,eAE/CnM,IAAA,WAAQwJ,KAAK,CAAC,MAAM,CAAA2C,QAAA,CAAC,aAAW,CAAQ,CAAC,cACzCnM,IAAA,WAAQwJ,KAAK,CAAC,MAAM,CAAA2C,QAAA,CAAC,aAAW,CAAQ,CAAC,cACzCnM,IAAA,WAAQwJ,KAAK,CAAC,MAAM,CAAA2C,QAAA,CAAC,aAAW,CAAQ,CAAC,cACzCnM,IAAA,WAAQwJ,KAAK,CAAC,MAAM,CAAA2C,QAAA,CAAC,aAAW,CAAQ,CAAC,cACzCnM,IAAA,WAAQwJ,KAAK,CAAC,MAAM,CAAA2C,QAAA,CAAC,aAAW,CAAQ,CAAC,cACzCnM,IAAA,WAAQwJ,KAAK,CAAC,MAAM,CAAA2C,QAAA,CAAC,aAAW,CAAQ,CAAC,cACzCnM,IAAA,WAAQwJ,KAAK,CAAC,MAAM,CAAA2C,QAAA,CAAC,aAAW,CAAQ,CAAC,cACzCnM,IAAA,WAAQwJ,KAAK,CAAC,MAAM,CAAA2C,QAAA,CAAC,aAAW,CAAQ,CAAC,cACzCnM,IAAA,WAAQwJ,KAAK,CAAC,MAAM,CAAA2C,QAAA,CAAC,aAAW,CAAQ,CAAC,cACzCnM,IAAA,WAAQwJ,KAAK,CAAC,OAAO,CAAA2C,QAAA,CAAC,cAAY,CAAQ,CAAC,cAC3CnM,IAAA,WAAQwJ,KAAK,CAAC,OAAO,CAAA2C,QAAA,CAAC,cAAY,CAAQ,CAAC,cAC3CnM,IAAA,WAAQwJ,KAAK,CAAC,OAAO,CAAA2C,QAAA,CAAC,cAAY,CAAQ,CAAC,cAC3CnM,IAAA,WAAQwJ,KAAK,CAAC,OAAO,CAAA2C,QAAA,CAAC,cAAY,CAAQ,CAAC,cAC3CnM,IAAA,WAAQwJ,KAAK,CAAC,OAAO,CAAA2C,QAAA,CAAC,cAAY,CAAQ,CAAC,EACrC,CAAC,CACN,CACN,EACK,CAAC,cAETnM,IAAA,SAAAmM,QAAA,CACGxL,OAAO,GAAK,MAAM,cACjBT,KAAA,CAAAE,SAAA,EAAA+L,QAAA,eACEnM,IAAA,CAACL,aAAa,EACZoB,SAAS,CAAEwL,kBAAmB,CAC9B5J,iBAAiB,CAAEA,iBAAkB,CACrCE,cAAc,CAAEyJ,cAAe,CAC/BtH,mBAAmB,CAAEA,mBAAoB,CACzCmG,WAAW,CAAEA,WAAY,CACzBE,cAAc,CAAEA,cAAe,CAC/BjB,eAAe,CAAEA,eAAgB,CAClC,CAAC,cACFpK,IAAA,CAACJ,UAAU,EACTiF,YAAY,CAAEF,KAAK,CAACE,YAAa,CACjCC,UAAU,CAAEH,KAAK,CAACG,UAAW,CAC7BC,eAAe,CAAEJ,KAAK,CAACI,eAAgB,CACvCoF,UAAU,CAAEA,UAAW,CACxB,CAAC,EACF,CAAC,cAEHnK,IAAA,CAACF,UAAU,EACTsM,eAAe,CAAEA,eAAgB,CACjCC,kBAAkB,CAAEA,kBAAmB,CACvCM,MAAM,CAAEA,CAAA,GAAM3C,aAAa,CAAC,MAAM,CAAE,CACrC,CACF,CACG,CAAC,cAEPhK,IAAA,WAAQkM,SAAS,CAAC,YAAY,CAAAC,QAAA,cAC5BnM,IAAA,MAAAmM,QAAA,CAAG,6CAAwC,CAAG,CAAC,CACzC,CAAC,EACN,CAAC,CAEV,CAEA,cAAe,CAAAzL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}