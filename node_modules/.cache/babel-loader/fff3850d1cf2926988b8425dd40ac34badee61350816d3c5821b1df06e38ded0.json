{"ast":null,"code":"import React from'react';import'../styles/SimulationStats.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SimulationStats=_ref=>{let{stats,onResetStats,totalAvailableQuestions=0}=_ref;const{testsTaken,testsPassed,totalQuestionsAnswered,totalCorrectAnswers=0,last10Tests}=stats;// Calculate overall passing percentage\nconst passingPercentage=testsTaken>0?Math.round(testsPassed/testsTaken*100):0;// Calculate last 10 tests passing percentage\nconst last10TestsCount=last10Tests.length;const last10TestsPassed=last10Tests.filter(test=>test.passed).length;const last10PassingPercentage=last10TestsCount>0?Math.round(last10TestsPassed/last10TestsCount*100):0;// Calculate correct answers percentage\nconst correctAnswersPercentage=totalQuestionsAnswered>0?Math.round(totalCorrectAnswers/totalQuestionsAnswered*100):0;return/*#__PURE__*/_jsxs(\"div\",{className:\"simulation-stats\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"stats-title\",children:\"Statistici Simul\\u0103ri\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-overview\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-card-value\",children:testsTaken}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-card-label\",children:\"Simul\\u0103ri efectuate\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-card-value\",children:testsPassed}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-card-label\",children:\"Simul\\u0103ri promovate\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card-value\",children:[passingPercentage,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-card-label\",children:\"Rat\\u0103 de promovare\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"section-title\",children:\"Ultimele 10 Simul\\u0103ri\"}),last10Tests.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"last-10-percentage\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"percentage-label\",children:\"Rata de promovare:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"percentage-value\",children:[last10PassingPercentage,\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"last-tests-list\",children:last10Tests.map((test,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`test-result ${test.passed?'passed':'failed'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"test-result-score\",children:[test.score,\"%\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-result-details\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[test.correctCount,\" din \",test.totalQuestions,\" corecte\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"test-result-date\",children:new Date(test.date).toLocaleDateString()})]})]},index))})]}):/*#__PURE__*/_jsx(\"div\",{className:\"no-data\",children:\"Nu exist\\u0103 simul\\u0103ri recente\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"section-title\",children:\"R\\u0103spunsuri Corecte\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-questions\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"total-questions-value\",children:[totalCorrectAnswers,/*#__PURE__*/_jsxs(\"span\",{className:\"total-questions-ratio\",children:[\"/\",totalQuestionsAnswered]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-questions-label\",children:[\"r\\u0103spunsuri corecte (\",correctAnswersPercentage,\"%)\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"stats-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-reset\",onClick:onResetStats,disabled:testsTaken===0,children:\"Reseteaz\\u0103 statisticile\"})})]});};export default SimulationStats;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SimulationStats","_ref","stats","onResetStats","totalAvailableQuestions","testsTaken","testsPassed","totalQuestionsAnswered","totalCorrectAnswers","last10Tests","passingPercentage","Math","round","last10TestsCount","length","last10TestsPassed","filter","test","passed","last10PassingPercentage","correctAnswersPercentage","className","children","map","index","score","correctCount","totalQuestions","Date","date","toLocaleDateString","onClick","disabled"],"sources":["/Users/dragosudrea/repos/quiz-react-app/src/components/SimulationStats.js"],"sourcesContent":["import React from 'react';\nimport '../styles/SimulationStats.css';\n\nconst SimulationStats = ({ stats, onResetStats, totalAvailableQuestions = 0 }) => {\n  const { \n    testsTaken, \n    testsPassed, \n    totalQuestionsAnswered,\n    totalCorrectAnswers = 0,\n    last10Tests \n  } = stats;\n\n  // Calculate overall passing percentage\n  const passingPercentage = testsTaken > 0 \n    ? Math.round((testsPassed / testsTaken) * 100) \n    : 0;\n  \n  // Calculate last 10 tests passing percentage\n  const last10TestsCount = last10Tests.length;\n  const last10TestsPassed = last10Tests.filter(test => test.passed).length;\n  const last10PassingPercentage = last10TestsCount > 0 \n    ? Math.round((last10TestsPassed / last10TestsCount) * 100) \n    : 0;\n\n  // Calculate correct answers percentage\n  const correctAnswersPercentage = totalQuestionsAnswered > 0\n    ? Math.round((totalCorrectAnswers / totalQuestionsAnswered) * 100)\n    : 0;\n\n  return (\n    <div className=\"simulation-stats\">\n      <h2 className=\"stats-title\">Statistici Simulări</h2>\n      \n      <div className=\"stats-overview\">\n        <div className=\"stat-card\">\n          <div className=\"stat-card-value\">{testsTaken}</div>\n          <div className=\"stat-card-label\">Simulări efectuate</div>\n        </div>\n        \n        <div className=\"stat-card\">\n          <div className=\"stat-card-value\">{testsPassed}</div>\n          <div className=\"stat-card-label\">Simulări promovate</div>\n        </div>\n        \n        <div className=\"stat-card\">\n          <div className=\"stat-card-value\">{passingPercentage}%</div>\n          <div className=\"stat-card-label\">Rată de promovare</div>\n        </div>\n      </div>\n      \n      <div className=\"stats-section\">\n        <h3 className=\"section-title\">Ultimele 10 Simulări</h3>\n        {last10Tests.length > 0 ? (\n          <>\n            <div className=\"last-10-percentage\">\n              <div className=\"percentage-label\">Rata de promovare:</div>\n              <div className=\"percentage-value\">{last10PassingPercentage}%</div>\n            </div>\n            \n            <div className=\"last-tests-list\">\n              {last10Tests.map((test, index) => (\n                <div \n                  key={index}\n                  className={`test-result ${test.passed ? 'passed' : 'failed'}`}\n                >\n                  <div className=\"test-result-score\">{test.score}%</div>\n                  <div className=\"test-result-details\">\n                    <div>{test.correctCount} din {test.totalQuestions} corecte</div>\n                    <div className=\"test-result-date\">{new Date(test.date).toLocaleDateString()}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </>\n        ) : (\n          <div className=\"no-data\">Nu există simulări recente</div>\n        )}\n      </div>\n      \n      <div className=\"stats-section\">\n        <h3 className=\"section-title\">Răspunsuri Corecte</h3>\n        <div className=\"total-questions\">\n          <div className=\"total-questions-value\">\n            {totalCorrectAnswers}\n            <span className=\"total-questions-ratio\">/{totalQuestionsAnswered}</span>\n          </div>\n          <div className=\"total-questions-label\">\n            răspunsuri corecte ({correctAnswersPercentage}%)\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"stats-actions\">\n        <button \n          className=\"btn btn-reset\" \n          onClick={onResetStats}\n          disabled={testsTaken === 0}\n        >\n          Resetează statisticile\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SimulationStats; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}