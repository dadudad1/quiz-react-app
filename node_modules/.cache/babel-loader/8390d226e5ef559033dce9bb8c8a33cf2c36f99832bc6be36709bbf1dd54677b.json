{"ast":null,"code":"var _jsxFileName = \"/Users/dragosudrea/repos/quiz-react-app/src/components/QuestionDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport '../styles/QuestionDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionDisplay = ({\n  question,\n  selectedAnswers,\n  onAnswerSelect,\n  feedback,\n  correctAnswer\n}) => {\n  _s();\n  // Randomize the order of answers using useMemo to prevent re-randomization on each render\n  const randomizedAnswers = useMemo(() => {\n    if (!question || !question.variante) return [];\n\n    // Convert object entries to array and shuffle\n    const entries = Object.entries(question.variante);\n\n    // Fisher-Yates shuffle algorithm\n    for (let i = entries.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [entries[i], entries[j]] = [entries[j], entries[i]];\n    }\n    return entries;\n  }, [question]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: [question.numar, \". \", question.intrebare]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: randomizedAnswers.map(([letter, text]) => {\n        const isSelected = selectedAnswers.includes(letter);\n        const shouldBeSelected = feedback.visible && correctAnswer.includes(letter);\n        const isIncorrect = feedback.visible && isSelected && !correctAnswer.includes(letter);\n        let className = \"answer-option\";\n        if (!feedback.visible && isSelected) {\n          className += \" selected\";\n        } else if (feedback.visible) {\n          if (shouldBeSelected) {\n            className += \" correct\";\n          } else if (isIncorrect) {\n            className += \" incorrect\";\n          }\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: className,\n          onClick: () => !feedback.visible && onAnswerSelect(letter),\n          \"data-letter\": letter,\n          children: text\n        }, letter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), feedback.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `feedback ${feedback.isCorrect ? 'correct' : 'incorrect'}`,\n      children: feedback.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionDisplay, \"ldtX8OqiI0Dc77eYanRdMkWWlo8=\");\n_c = QuestionDisplay;\nexport default QuestionDisplay;\nvar _c;\n$RefreshReg$(_c, \"QuestionDisplay\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","QuestionDisplay","question","selectedAnswers","onAnswerSelect","feedback","correctAnswer","_s","randomizedAnswers","variante","entries","Object","i","length","j","Math","floor","random","className","children","numar","intrebare","fileName","_jsxFileName","lineNumber","columnNumber","map","letter","text","isSelected","includes","shouldBeSelected","visible","isIncorrect","onClick","isCorrect","message","_c","$RefreshReg$"],"sources":["/Users/dragosudrea/repos/quiz-react-app/src/components/QuestionDisplay.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport '../styles/QuestionDisplay.css';\r\n\r\nconst QuestionDisplay = ({ \r\n  question, \r\n  selectedAnswers, \r\n  onAnswerSelect,\r\n  feedback,\r\n  correctAnswer\r\n}) => {\r\n  // Randomize the order of answers using useMemo to prevent re-randomization on each render\r\n  const randomizedAnswers = useMemo(() => {\r\n    if (!question || !question.variante) return [];\r\n    \r\n    // Convert object entries to array and shuffle\r\n    const entries = Object.entries(question.variante);\r\n    \r\n    // Fisher-Yates shuffle algorithm\r\n    for (let i = entries.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [entries[i], entries[j]] = [entries[j], entries[i]];\r\n    }\r\n    \r\n    return entries;\r\n  }, [question]);\r\n  \r\n  return (\r\n    <div className=\"question-display\">\r\n      <div className=\"question\">\r\n        {question.numar}. {question.intrebare}\r\n      </div>\r\n      \r\n      <div className=\"answers\">\r\n        {randomizedAnswers.map(([letter, text]) => {\r\n          const isSelected = selectedAnswers.includes(letter);\r\n          const shouldBeSelected = feedback.visible && correctAnswer.includes(letter);\r\n          const isIncorrect = feedback.visible && isSelected && !correctAnswer.includes(letter);\r\n          \r\n          let className = \"answer-option\";\r\n          if (!feedback.visible && isSelected) {\r\n            className += \" selected\";\r\n          } else if (feedback.visible) {\r\n            if (shouldBeSelected) {\r\n              className += \" correct\";\r\n            } else if (isIncorrect) {\r\n              className += \" incorrect\";\r\n            }\r\n          }\r\n          \r\n          return (\r\n            <div \r\n              key={letter}\r\n              className={className}\r\n              onClick={() => !feedback.visible && onAnswerSelect(letter)}\r\n              data-letter={letter}\r\n            >\r\n              {text}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      \r\n      {feedback.visible && (\r\n        <div className={`feedback ${feedback.isCorrect ? 'correct' : 'incorrect'}`}>\r\n          {feedback.message}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}