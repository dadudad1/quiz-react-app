{"ast":null,"code":"var _jsxFileName = \"/Users/dragosudrea/repos/quiz-react-app/src/components/Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Timer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = ({\n  initialTimeInMinutes,\n  onTimeExpired\n}) => {\n  _s();\n  const [timeRemaining, setTimeRemaining] = useState(initialTimeInMinutes * 60); // in seconds\n  const [isActive, setIsActive] = useState(true);\n  useEffect(() => {\n    let interval = null;\n    if (isActive && timeRemaining > 0) {\n      interval = setInterval(() => {\n        setTimeRemaining(prevTime => prevTime - 1);\n      }, 1000);\n    } else if (timeRemaining === 0) {\n      setIsActive(false);\n      if (onTimeExpired) {\n        onTimeExpired();\n      }\n    }\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [isActive, timeRemaining, onTimeExpired]);\n\n  // Format time as HH:MM:SS\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const remainingSeconds = seconds % 60;\n    return [hours.toString().padStart(2, '0'), minutes.toString().padStart(2, '0'), remainingSeconds.toString().padStart(2, '0')].join(':');\n  };\n\n  // Calculate percentage of time remaining\n  const timePercentage = Math.round(timeRemaining / (initialTimeInMinutes * 60) * 100);\n\n  // Determine timer color based on time remaining\n  let timerClass = 'timer-normal';\n  if (timePercentage < 25) {\n    timerClass = 'timer-danger';\n  } else if (timePercentage < 50) {\n    timerClass = 'timer-warning';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `timer ${timerClass}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-label\",\n        children: \"Timp r\\u0103mas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-display\",\n        children: formatTime(timeRemaining)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-progress\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-progress-bar\",\n        style: {\n          width: `${timePercentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Timer, \"U535L4QIlv4iD8R0yHWTmgYQF/g=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","initialTimeInMinutes","onTimeExpired","_s","timeRemaining","setTimeRemaining","isActive","setIsActive","interval","setInterval","prevTime","clearInterval","formatTime","seconds","hours","Math","floor","minutes","remainingSeconds","toString","padStart","join","timePercentage","round","timerClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["/Users/dragosudrea/repos/quiz-react-app/src/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/Timer.css';\n\nconst Timer = ({ initialTimeInMinutes, onTimeExpired }) => {\n  const [timeRemaining, setTimeRemaining] = useState(initialTimeInMinutes * 60); // in seconds\n  const [isActive, setIsActive] = useState(true);\n  \n  useEffect(() => {\n    let interval = null;\n    \n    if (isActive && timeRemaining > 0) {\n      interval = setInterval(() => {\n        setTimeRemaining(prevTime => prevTime - 1);\n      }, 1000);\n    } else if (timeRemaining === 0) {\n      setIsActive(false);\n      if (onTimeExpired) {\n        onTimeExpired();\n      }\n    }\n    \n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [isActive, timeRemaining, onTimeExpired]);\n\n  // Format time as HH:MM:SS\n  const formatTime = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const remainingSeconds = seconds % 60;\n    \n    return [\n      hours.toString().padStart(2, '0'),\n      minutes.toString().padStart(2, '0'),\n      remainingSeconds.toString().padStart(2, '0')\n    ].join(':');\n  };\n  \n  // Calculate percentage of time remaining\n  const timePercentage = Math.round((timeRemaining / (initialTimeInMinutes * 60)) * 100);\n  \n  // Determine timer color based on time remaining\n  let timerClass = 'timer-normal';\n  if (timePercentage < 25) {\n    timerClass = 'timer-danger';\n  } else if (timePercentage < 50) {\n    timerClass = 'timer-warning';\n  }\n\n  return (\n    <div className=\"timer-container\">\n      <div className={`timer ${timerClass}`}>\n        <div className=\"timer-label\">Timp rÄƒmas:</div>\n        <div className=\"timer-display\">{formatTime(timeRemaining)}</div>\n      </div>\n      <div className=\"timer-progress\">\n        <div \n          className=\"timer-progress-bar\" \n          style={{ width: `${timePercentage}%` }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}