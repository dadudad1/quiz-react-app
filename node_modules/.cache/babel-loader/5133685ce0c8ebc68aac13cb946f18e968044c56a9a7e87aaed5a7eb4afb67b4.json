{"ast":null,"code":"var _jsxFileName = \"/Users/dragosudrea/repos/quiz-react-app/src/App.js\",\n  _window,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport QuizContainer from './components/QuizContainer';\nimport Statistics from './components/Statistics';\nimport LoadingOverlay from './components/LoadingOverlay';\nimport Simulation from './components/Simulation';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst isElectron = ((_window = window) === null || _window === void 0 ? void 0 : _window.electron) !== undefined;\nfunction App() {\n  _s();\n  // State for app mode and chapter selection\n  const [appMode, setAppMode] = useState('quiz'); // 'quiz' or 'simulation'\n  const [activeChapter, setActiveChapter] = useState('cap1');\n\n  // State for question sets\n  const [questions, setQuestions] = useState([]);\n  const [questionsChapter2, setQuestionsChapter2] = useState([]);\n  const [questionsChapter3, setQuestionsChapter3] = useState([]);\n  const [questionsChapter4, setQuestionsChapter4] = useState([]);\n  const [questionsChapter5, setQuestionsChapter5] = useState([]);\n  const [questionsChapter6, setQuestionsChapter6] = useState([]);\n  const [questionsChapter7, setQuestionsChapter7] = useState([]);\n  const [questionsChapter8, setQuestionsChapter8] = useState([]);\n  const [questionsChapter9, setQuestionsChapter9] = useState([]);\n  const [questionsChapter10, setQuestionsChapter10] = useState([]);\n  const [questionsChapter11, setQuestionsChapter11] = useState([]);\n  const [questionsChapter12, setQuestionsChapter12] = useState([]);\n  const [questionsChapter13, setQuestionsChapter13] = useState([]);\n  const [questionsChapter14, setQuestionsChapter14] = useState([]);\n  const [filteredQuestions, setFilteredQuestions] = useState([]);\n\n  // State for correct answers from all chapters\n  const [correctAnswers, setCorrectAnswers] = useState({});\n  const [correctAnswersChapter2, setCorrectAnswersChapter2] = useState({});\n  const [correctAnswersChapter3, setCorrectAnswersChapter3] = useState({});\n  const [correctAnswersChapter4, setCorrectAnswersChapter4] = useState({});\n  const [correctAnswersChapter5, setCorrectAnswersChapter5] = useState({});\n  const [correctAnswersChapter6, setCorrectAnswersChapter6] = useState({});\n  const [correctAnswersChapter7, setCorrectAnswersChapter7] = useState({});\n  const [correctAnswersChapter8, setCorrectAnswersChapter8] = useState({});\n  const [correctAnswersChapter9, setCorrectAnswersChapter9] = useState({});\n  const [correctAnswersChapter10, setCorrectAnswersChapter10] = useState({});\n  const [correctAnswersChapter11, setCorrectAnswersChapter11] = useState({});\n  const [correctAnswersChapter12, setCorrectAnswersChapter12] = useState({});\n  const [correctAnswersChapter13, setCorrectAnswersChapter13] = useState({});\n  const [correctAnswersChapter14, setCorrectAnswersChapter14] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [stats, setStats] = useState({\n    correctCount: 0,\n    totalCount: 0,\n    bookmarkedCount: 0\n  });\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState(new Set());\n  const [error, setError] = useState(null);\n\n  // State for loading and errors per chapter\n  const [chapterLoadingStates, setChapterLoadingStates] = useState({\n    cap1: true,\n    cap2: true,\n    cap3: true,\n    cap4: true,\n    cap5: true,\n    cap6: true,\n    cap7: true,\n    cap8: true,\n    cap9: true,\n    cap10: true,\n    cap11: true,\n    cap12: true,\n    cap13: true,\n    cap14: true\n  });\n  const [chapterErrors, setChapterErrors] = useState({});\n\n  // Helper function to update loading state for a chapter\n  const setChapterLoading = (chapter, isLoading) => {\n    setChapterLoadingStates(prev => ({\n      ...prev,\n      [chapter]: isLoading\n    }));\n  };\n\n  // Helper function to update error state for a chapter\n  const setChapterError = (chapter, error) => {\n    setChapterErrors(prev => ({\n      ...prev,\n      [chapter]: error\n    }));\n  };\n\n  // Combined fetch function for questions and answers\n  const fetchChapterData = async chapter => {\n    setChapterLoading(chapter, true);\n    try {\n      // Fetch questions\n      let questionsData;\n      let answersData;\n      if (isElectron) {\n        // Use Electron IPC to load files\n        questionsData = await window.electron.ipcRenderer.invoke('read-file', `capitole/cap${chapter}.json`);\n        answersData = await window.electron.ipcRenderer.invoke('read-file', `capitole/cap${chapter}_raspunsuri`);\n      } else {\n        // Web browser fetch\n        const questionsResponse = await fetch(`/capitole/cap${chapter}.json`);\n        questionsData = await questionsResponse.json();\n        const answersResponse = await fetch(`/capitole/cap${chapter}_raspunsuri`);\n        answersData = await answersResponse.text();\n      }\n\n      // Process answers\n      const answers = {};\n      answersData.split('; ').forEach(item => {\n        const parts = item.split('.');\n        if (parts.length === 2) {\n          const questionNumber = parseInt(parts[0]);\n          const answer = parts[1];\n          answers[questionNumber] = answer;\n        }\n      });\n\n      // Update state based on chapter\n      switch (chapter) {\n        case 4:\n          setQuestionsChapter4(questionsData);\n          setCorrectAnswersChapter4(answers);\n          break;\n        case 5:\n          setQuestionsChapter5(questionsData);\n          setCorrectAnswersChapter5(answers);\n          break;\n        case 6:\n          setQuestionsChapter6(questionsData);\n          setCorrectAnswersChapter6(answers);\n          break;\n        case 7:\n          setQuestionsChapter7(questionsData);\n          setCorrectAnswersChapter7(answers);\n          break;\n        case 8:\n          setQuestionsChapter8(questionsData);\n          setCorrectAnswersChapter8(answers);\n          break;\n        case 9:\n          setQuestionsChapter9(questionsData);\n          setCorrectAnswersChapter9(answers);\n          break;\n        case 10:\n          setQuestionsChapter10(questionsData);\n          setCorrectAnswersChapter10(answers);\n          break;\n        case 11:\n          setQuestionsChapter11(questionsData);\n          setCorrectAnswersChapter11(answers);\n          break;\n        case 12:\n          setQuestionsChapter12(questionsData);\n          setCorrectAnswersChapter12(answers);\n          break;\n        case 13:\n          setQuestionsChapter13(questionsData);\n          setCorrectAnswersChapter13(answers);\n          break;\n        case 14:\n          setQuestionsChapter14(questionsData);\n          setCorrectAnswersChapter14(answers);\n          break;\n      }\n      setChapterError(chapter, null);\n    } catch (error) {\n      console.error(`Error loading chapter ${chapter}:`, error);\n      setChapterError(chapter, `Failed to load chapter ${chapter}`);\n    } finally {\n      setChapterLoading(chapter, false);\n    }\n  };\n\n  // Load all chapters data\n  useEffect(() => {\n    const loadChapters = async () => {\n      // Load chapters 1 and 2 first\n      try {\n        let data1, data2;\n        if (isElectron) {\n          // Use Electron IPC to load files\n          data1 = await window.electron.ipcRenderer.invoke('read-file', 'capitole/cap1.json');\n          data2 = await window.electron.ipcRenderer.invoke('read-file', 'capitole/cap2.json');\n        } else {\n          // Web browser fetch\n          const response1 = await fetch('/capitole/cap1.json');\n          data1 = await response1.json();\n          const response2 = await fetch('/capitole/cap2.json');\n          data2 = await response2.json();\n        }\n        setQuestions(data1);\n        setQuestionsChapter2(data2);\n        setChapterLoading('cap1', false);\n        setChapterLoading('cap2', false);\n      } catch (error) {\n        console.error('Error fetching chapters 1 and 2:', error);\n        setChapterError('cap1', 'Failed to load chapter 1');\n        setChapterError('cap2', 'Failed to load chapter 2');\n      }\n\n      // Then load chapters 4-14\n      const chaptersToLoad = [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n      const loadChapterWithDelay = async (chapter, delay) => {\n        await new Promise(resolve => setTimeout(resolve, delay));\n        await fetchChapterData(chapter);\n      };\n      const promises = chaptersToLoad.map((chapter, index) => loadChapterWithDelay(chapter, index * 200));\n      await Promise.all(promises);\n      setIsLoading(false);\n    };\n    loadChapters();\n  }, []);\n\n  // Încărcăm răspunsurile corecte pentru capitolul 1\n  useEffect(() => {\n    const answersData = \"1.ACE; 2.CDE; 3.ABE; 4.ABE; 5.ADE; 6.BDE; 7.ACD; 8.BDE; 9.ABDE; 10.ACE; 11.BDE; 12.ACD; 13.ADE; 14.ACD; 15.BDE; 16.ABCE; 17.AE; 18.BCDE; 19.BE; 20.CDE; 21.ABD; 22.ACE; 23.BCD; 24.ACD; 25.CDE; 26.ACD; 27.CE; 28.BD; 29.CDE; 30.ACD; 31.E; 32.ACD; 33.BDE; 34.ACDE; 35.BD; 36.ABCE; 37.BCE; 38.ACD; 39.BCE; 40.ABD; 41.CDE; 42.BD; 43.CDE; 44.ABE; 45.ABC; 46.BCD; 47.ABE; 48.ADE; 49.BCE; 50.ABD; 51.BCE; 52.BCE; 53.ACE; 54.ABD; 55.ACD; 56.AE; 57.ABE; 58.ACD; 59.ACDE; 60.ACE; 61.BDE; 62.ABE; 63.CD; 64.ABCD; 65.BCD; 66.ACE; 67.ACE; 68.ABD; 69.BDE; 70.ABC; 71.BCE; 72.BDE; 73.ACE; 74.BD; 75.ACDE; 76.ABD; 77.BCE; 78.ACE; 79.BCE; 80.ABCE; 81.ACD; 82.ACD; 83.BDE; 84.ABDE; 85.ABE 86.ACE; 87.ACE; 88.ABE; 89.AD; 90.BCD; 91.BDE; 92.BCE; 93.ACE; 94.ABE; 95.ADE; 96.ABC; 97.BE; 98.ABE; 99.ACDE; 100.ABE; 101.CDE; 102.ACD; 103.ADE; 104.ABD; 105.ACDE; 106.AD; 107.BDE; 108.ABE; 109.ACE; 110.CDE; 111.CDE; 112.ADE; 113.ACE; 114.ACE; 115.ACE; 116.ACD; 117.ACE; 118.BE; 119.ABCE; 120.ACE; 121.ACE; 122.BCD; 123.BCE; 124.ACE; 125.BDE; 126.AC; 127.CDE; 128.ADE; 129.CE; 130.ABD; 131.ACD; 132.BCE; 133.B; 134.BE; 135.ADE; 136.ABCE; 137.BC; 138.CDE; 139.ABE; 140.BDE; 141.ACD; 142.BCE; 143.BCE; 144.CDE; 145.BD; 146.ABDE; 147.ACE; 148.ABD; 149.BDE; 150.ACE; 151.ACDE; 152.BCD; 153.ADE; 154.CDE; 155.BCE; 156.AC; 157.ACD; 158.BDE; 159.BDE; 160.BCE; 161.ACD; 162.ACE; 163.AC; 164.ACD; 165.BCE; 166.ABCD; 167.CE; 168.ABCE; 169.ABCE; 170.BCE; 171.ACE; 172.BDE; 173.CDE; 174.ABE; 175.BCE; 176.ABE; 177.BDE; 178.ABD; 179.ACD; 180.BDE; 181.ADE; 182.CDE; 183.BDE; 184.ACE; 185.BCD; 186.ABE; 187.BCE; 188.BCD; 189.ADE; 190.ADE; 191.ACD; 192.BCD; 193.ACE; 194.BCD; 195.ADE; 196.ABE; 197.BCDE; 198.ACD; 199.BDE; 200.ADE\";\n    const answers = {};\n    answersData.split('; ').forEach(item => {\n      const parts = item.split('.');\n      if (parts.length === 2) {\n        const questionNumber = parseInt(parts[0]);\n        const answer = parts[1];\n        answers[questionNumber] = answer;\n      }\n    });\n    setCorrectAnswers(answers);\n  }, []);\n\n  // Încărcăm răspunsurile corecte pentru capitolul 2\n  useEffect(() => {\n    const answersData2 = \"1.ADE; 2.AE; 3.ABE; 4.ABE; 5.ACE; 6.ABE; 7.ADE; 8.BCD; 9.BDE; 10.ACE; 11.ADE; 12.BCE; 13.BDE; 14.BCD; 15.BDE; 16.ABD; 17.ACDE; 18.BD; 19.ACE; 20.ACD; 21.BE; 22.ABD; 23.CE; 24.ACD; 25.ABE; 26.ACD; 27.ACDE; 28.BCE; 29.BE; 30.ABE; 31.ADE; 32.CD; 33.BD; 34.D; 35.BD; 36.ABE; 37.BCD; 38.BDE; 39.ADE; 40.ADE; 41.ACE; 42.ACDE; 43.ABE; 44.ADE; 45.BD; 46.ABE; 47.CD; 48.AD; 49.BDE; 50.ACE; 51.BCE; 52.BCD; 53.BCDE; 54.C; 55.BCE; 56.AD; 57.ACE; 58.BCE; 59.ABD; 60.BCE; 61.ACE; 62.AD; 63.ABD; 64.ACE; 65.ACE; 66.ACDE; 67.ADE; 68.ABD; 69.BCD; 70.ACD; 71.BD; 72.ABE; 73.BCE; 74.AD; 75.ACE; 76.BCE; 77.ABE; 78.BC; 79.BDE; 80.BE; 81.CE; 82.ACD; 83.ABD; 84.ABDE; 85.BCD; 86.CD; 87.AE; 88.BCD; 89.ACE; 90.CE; 91.BCD; 92.ABE; 93.BDE; 94.ABE; 95.DE; 96.BCD; 97.ABD; 98.ACE; 99.BCE; 100.ACE; 101.BCD; 102.BDE; 103.BCD; 104.BCD; 105.BCE; 106.BDE; 107.ACE; 108.ADE; 109.ACE; 110.ACD; 111.ACDE; 112.BCE; 113.BCE; 114.BCE; 115.BCDE; 116.ABD; 117.ACE; 118.BE; 119.BD; 120.ACD; 121.ABE; 122.ACE; 123.BCE; 124.ABE; 125.ACE; 126.ACD; 127.ACD; 128.ABD; 129.BCE; 130.BCE; 131.D; 132.DE; 133.AD; 134.BCD; 135.BCE; 136.ABCE; 137.BDE; 138.BDE; 139.BCD; 140.BCE; 141.ACD; 142.BCE; 143.CDE; 144.ACDE; 145.BDE; 146.BCD; 147.CDE; 148.AD; 149.BC; 150.ACD; 151.ACE; 152.AD; 153.ACE; 154.ACDE; 155.BCD; 156.ABDE; 157.ABE; 158.BCD; 159.ABD; 160.BCD; 161.AD; 162.ADE; 163.BCD; 164.AC; 165.BDE; 166.CDE; 167.ABC; 168.ADE; 169.BC; 170.BDE; 171.BDE; 172.ADE; 173.BDE; 174.ABE; 175.BCD; 176.BCE; 177.BCD; 178.ACE; 179.ACE; 180.ACD; 181.ABDE; 182.BE; 183.ACE; 184.CE; 185.CDE; 186.ACDE; 187.ABE; 188.BCD; 189.ACE; 190.ACD\";\n    const answers = {};\n    answersData2.split('; ').forEach(item => {\n      const parts = item.split('.');\n      if (parts.length === 2) {\n        const questionNumber = parseInt(parts[0]);\n        const answer = parts[1];\n        answers[questionNumber] = answer;\n      }\n    });\n    setCorrectAnswersChapter2(answers);\n  }, []);\n\n  // Încărcăm răspunsurile corecte pentru capitolul 3\n  useEffect(() => {\n    const fetchQuestionsChapter3 = async () => {\n      try {\n        const response = await fetch('/cap3.json');\n        const data = await response.json();\n        setQuestionsChapter3(data);\n      } catch (error) {\n        console.error('Error fetching chapter 3:', error);\n        setError('Failed to load chapter 3 questions');\n      }\n    };\n    fetchQuestionsChapter3();\n  }, [questionsChapter2]); // Depends on chapter 2 loading to ensure proper ordering\n\n  // Helper function to safely interact with localStorage\n  const safeStorage = {\n    getItem: key => {\n      try {\n        return localStorage.getItem(key);\n      } catch (e) {\n        return null;\n      }\n    },\n    setItem: (key, value) => {\n      try {\n        localStorage.setItem(key, value);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n  };\n\n  // Încărcăm întrebările salvate din localStorage\n  useEffect(() => {\n    try {\n      const savedBookmarks = safeStorage.getItem('bookmarkedQuestions');\n      if (savedBookmarks) {\n        const bookmarks = JSON.parse(savedBookmarks);\n        setBookmarkedQuestions(new Set(bookmarks));\n        setStats(prev => ({\n          ...prev,\n          bookmarkedCount: bookmarks.length\n        }));\n      }\n    } catch (e) {\n      console.warn('Could not load bookmarks:', e);\n    }\n  }, []);\n\n  // Actualizăm numărul de întrebări salvate când se modifică bookmarkedQuestions\n  useEffect(() => {\n    setStats(prev => ({\n      ...prev,\n      bookmarkedCount: bookmarkedQuestions.size\n    }));\n\n    // Salvăm întrebările marcate în localStorage\n    try {\n      safeStorage.setItem('bookmarkedQuestions', JSON.stringify([...bookmarkedQuestions]));\n    } catch (e) {\n      console.warn('Could not save bookmarks:', e);\n    }\n  }, [bookmarkedQuestions]);\n\n  // Funcția pentru schimbarea modului aplicației\n  const switchAppMode = mode => {\n    setAppMode(mode);\n  };\n\n  // Update switchChapter function to handle new chapters\n  const switchChapter = chapter => {\n    setActiveChapter(chapter);\n    switch (chapter) {\n      case 'cap1':\n        setFilteredQuestions(questions);\n        break;\n      case 'cap2':\n        setFilteredQuestions(questionsChapter2);\n        break;\n      case 'cap3':\n        setFilteredQuestions(questionsChapter3);\n        break;\n      case 'cap4':\n        setFilteredQuestions(questionsChapter4);\n        break;\n      case 'cap5':\n        setFilteredQuestions(questionsChapter5);\n        break;\n      case 'cap6':\n        setFilteredQuestions(questionsChapter6);\n        break;\n      case 'cap7':\n        setFilteredQuestions(questionsChapter7);\n        break;\n      case 'cap8':\n        setFilteredQuestions(questionsChapter8);\n        break;\n      case 'cap9':\n        setFilteredQuestions(questionsChapter9);\n        break;\n      case 'cap10':\n        setFilteredQuestions(questionsChapter10);\n        break;\n      case 'cap11':\n        setFilteredQuestions(questionsChapter11);\n        break;\n      case 'cap12':\n        setFilteredQuestions(questionsChapter12);\n        break;\n      case 'cap13':\n        setFilteredQuestions(questionsChapter13);\n        break;\n      case 'cap14':\n        setFilteredQuestions(questionsChapter14);\n        break;\n      default:\n        setFilteredQuestions([]);\n    }\n    resetStats();\n  };\n\n  // Funcția de căutare în întrebări\n  const searchQuestions = query => {\n    if (!query.trim()) {\n      // Reset based on active chapter\n      switch (activeChapter) {\n        case 'cap1':\n          setFilteredQuestions([...questions]);\n          break;\n        case 'cap2':\n          setFilteredQuestions([...questionsChapter2]);\n          break;\n        case 'cap3':\n          setFilteredQuestions([...questionsChapter3]);\n          break;\n        case 'cap4':\n          setFilteredQuestions([...questionsChapter4]);\n          break;\n        case 'cap5':\n          setFilteredQuestions([...questionsChapter5]);\n          break;\n        case 'cap6':\n          setFilteredQuestions([...questionsChapter6]);\n          break;\n        case 'cap7':\n          setFilteredQuestions([...questionsChapter7]);\n          break;\n        case 'cap8':\n          setFilteredQuestions([...questionsChapter8]);\n          break;\n        case 'cap9':\n          setFilteredQuestions([...questionsChapter9]);\n          break;\n        case 'cap10':\n          setFilteredQuestions([...questionsChapter10]);\n          break;\n        case 'cap11':\n          setFilteredQuestions([...questionsChapter11]);\n          break;\n        case 'cap12':\n          setFilteredQuestions([...questionsChapter12]);\n          break;\n        case 'cap13':\n          setFilteredQuestions([...questionsChapter13]);\n          break;\n        case 'cap14':\n          setFilteredQuestions([...questionsChapter14]);\n          break;\n      }\n      return true;\n    }\n    query = query.toLowerCase();\n\n    // Select the appropriate question set based on active chapter\n    let currentQuestions;\n    switch (activeChapter) {\n      case 'cap1':\n        currentQuestions = questions;\n        break;\n      case 'cap2':\n        currentQuestions = questionsChapter2;\n        break;\n      case 'cap3':\n        currentQuestions = questionsChapter3;\n        break;\n      case 'cap4':\n        currentQuestions = questionsChapter4;\n        break;\n      case 'cap5':\n        currentQuestions = questionsChapter5;\n        break;\n      case 'cap6':\n        currentQuestions = questionsChapter6;\n        break;\n      case 'cap7':\n        currentQuestions = questionsChapter7;\n        break;\n      case 'cap8':\n        currentQuestions = questionsChapter8;\n        break;\n      case 'cap9':\n        currentQuestions = questionsChapter9;\n        break;\n      case 'cap10':\n        currentQuestions = questionsChapter10;\n        break;\n      case 'cap11':\n        currentQuestions = questionsChapter11;\n        break;\n      case 'cap12':\n        currentQuestions = questionsChapter12;\n        break;\n      case 'cap13':\n        currentQuestions = questionsChapter13;\n        break;\n      case 'cap14':\n        currentQuestions = questionsChapter14;\n        break;\n      default:\n        currentQuestions = [];\n    }\n    const filtered = currentQuestions.filter(q => {\n      // Căutăm după numărul întrebării\n      if (q.numar.toString() === query) {\n        return true;\n      }\n\n      // Căutăm în textul întrebării\n      if (q.intrebare.toLowerCase().includes(query)) {\n        return true;\n      }\n\n      // Căutăm în variante\n      for (const text of Object.values(q.variante)) {\n        if (text.toLowerCase().includes(query)) {\n          return true;\n        }\n      }\n      return false;\n    });\n    setFilteredQuestions(filtered);\n    return filtered.length > 0;\n  };\n\n  // Funcția pentru actualizarea statisticilor\n  const updateStats = isCorrect => {\n    setStats(prev => ({\n      ...prev,\n      correctCount: isCorrect ? prev.correctCount + 1 : prev.correctCount,\n      totalCount: prev.totalCount + 1\n    }));\n  };\n\n  // Funcția pentru resetarea statisticilor\n  const resetStats = () => {\n    setStats(prev => ({\n      ...prev,\n      correctCount: 0,\n      totalCount: 0\n    }));\n  };\n\n  // Funcția pentru toggle bookmark\n  const toggleBookmark = questionNumber => {\n    setBookmarkedQuestions(prev => {\n      const newBookmarks = new Set(prev);\n      if (newBookmarks.has(questionNumber)) {\n        newBookmarks.delete(questionNumber);\n      } else {\n        newBookmarks.add(questionNumber);\n      }\n      return newBookmarks;\n    });\n  };\n  if (isLoading) {\n    const loadedChapters = Object.values(chapterLoadingStates).filter(state => !state).length;\n    const totalChapters = Object.keys(chapterLoadingStates).length;\n    return /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      progress: Math.round(loadedChapters / totalChapters * 100),\n      errors: chapterErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Eroare: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Prepare data for simulation mode\n  const allChaptersData = {\n    cap1: questions,\n    cap2: questionsChapter2,\n    cap3: questionsChapter3,\n    cap4: questionsChapter4,\n    cap5: questionsChapter5,\n    cap6: questionsChapter6,\n    cap7: questionsChapter7,\n    cap8: questionsChapter8,\n    cap9: questionsChapter9,\n    cap10: questionsChapter10,\n    cap11: questionsChapter11,\n    cap12: questionsChapter12,\n    cap13: questionsChapter13,\n    cap14: questionsChapter14\n  };\n  const correctAnswersData = {\n    cap1: correctAnswers,\n    cap2: correctAnswersChapter2,\n    cap3: correctAnswersChapter3,\n    cap4: correctAnswersChapter4,\n    cap5: correctAnswersChapter5,\n    cap6: correctAnswersChapter6,\n    cap7: correctAnswersChapter7,\n    cap8: correctAnswersChapter8,\n    cap9: correctAnswersChapter9,\n    cap10: correctAnswersChapter10,\n    cap11: correctAnswersChapter11,\n    cap12: correctAnswersChapter12,\n    cap13: correctAnswersChapter13,\n    cap14: correctAnswersChapter14\n  };\n\n  // Get the correct answers based on active chapter\n  let currentAnswers;\n  let currentQuestionSet;\n  switch (activeChapter) {\n    case 'cap1':\n      currentAnswers = correctAnswers;\n      currentQuestionSet = questions;\n      break;\n    case 'cap2':\n      currentAnswers = correctAnswersChapter2;\n      currentQuestionSet = questionsChapter2;\n      break;\n    case 'cap3':\n      currentAnswers = correctAnswersChapter3;\n      currentQuestionSet = questionsChapter3;\n      break;\n    case 'cap4':\n      currentAnswers = correctAnswersChapter4;\n      currentQuestionSet = questionsChapter4;\n      break;\n    case 'cap5':\n      currentAnswers = correctAnswersChapter5;\n      currentQuestionSet = questionsChapter5;\n      break;\n    case 'cap6':\n      currentAnswers = correctAnswersChapter6;\n      currentQuestionSet = questionsChapter6;\n      break;\n    case 'cap7':\n      currentAnswers = correctAnswersChapter7;\n      currentQuestionSet = questionsChapter7;\n      break;\n    case 'cap8':\n      currentAnswers = correctAnswersChapter8;\n      currentQuestionSet = questionsChapter8;\n      break;\n    case 'cap9':\n      currentAnswers = correctAnswersChapter9;\n      currentQuestionSet = questionsChapter9;\n      break;\n    case 'cap10':\n      currentAnswers = correctAnswersChapter10;\n      currentQuestionSet = questionsChapter10;\n      break;\n    case 'cap11':\n      currentAnswers = correctAnswersChapter11;\n      currentQuestionSet = questionsChapter11;\n      break;\n    case 'cap12':\n      currentAnswers = correctAnswersChapter12;\n      currentQuestionSet = questionsChapter12;\n      break;\n    case 'cap13':\n      currentAnswers = correctAnswersChapter13;\n      currentQuestionSet = questionsChapter13;\n      break;\n    case 'cap14':\n      currentAnswers = correctAnswersChapter14;\n      currentQuestionSet = questionsChapter14;\n      break;\n    default:\n      currentAnswers = {};\n      currentQuestionSet = [];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Grile Admitere Timisoara Biologie 2024\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-mode-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mode-btn ${appMode === 'quiz' ? 'active' : ''}`,\n          onClick: () => switchAppMode('quiz'),\n          children: \"Mod Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mode-btn ${appMode === 'simulation' ? 'active' : ''}`,\n          onClick: () => switchAppMode('simulation'),\n          children: \"Simulare Examen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), appMode === 'quiz' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chapter-selector\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"chapter-dropdown\",\n          value: activeChapter,\n          onChange: e => switchChapter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cap1\",\n            children: \"Capitolul 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cap2\",\n            children: \"Capitolul 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cap3\",\n            children: \"Capitolul 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cap4\",\n            children: \"Capitolul 4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cap5\",\n            children: \"Capitolul 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cap6\",\n            children: \"Capitolul 6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cap7\",\n            children: \"Capitolul 7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cap8\",\n            children: \"Capitolul 8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cap9\",\n            children: \"Capitolul 9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cap10\",\n            children: \"Capitolul 10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cap11\",\n            children: \"Capitolul 11\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cap12\",\n            children: \"Capitolul 12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cap13\",\n            children: \"Capitolul 13\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cap14\",\n            children: \"Capitolul 14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: appMode === 'quiz' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(QuizContainer, {\n          questions: currentQuestionSet,\n          filteredQuestions: filteredQuestions,\n          correctAnswers: currentAnswers,\n          bookmarkedQuestions: bookmarkedQuestions,\n          updateStats: updateStats,\n          toggleBookmark: toggleBookmark,\n          searchQuestions: searchQuestions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n          correctCount: stats.correctCount,\n          totalCount: stats.totalCount,\n          bookmarkedCount: stats.bookmarkedCount,\n          resetStats: resetStats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Simulation, {\n        allChaptersData: allChaptersData,\n        correctAnswersData: correctAnswersData,\n        onExit: () => switchAppMode('quiz')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"App-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://revolut.me/dragoscdk\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"donate-button\",\n          children: \"Doneaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA9 2024 Grile Admitere Timisoara Biologie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 663,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/03HRdkWBRI9Tfck7ToHiNF67fo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","QuizContainer","Statistics","LoadingOverlay","Simulation","jsxDEV","_jsxDEV","Fragment","_Fragment","isElectron","_window","window","electron","undefined","App","_s","appMode","setAppMode","activeChapter","setActiveChapter","questions","setQuestions","questionsChapter2","setQuestionsChapter2","questionsChapter3","setQuestionsChapter3","questionsChapter4","setQuestionsChapter4","questionsChapter5","setQuestionsChapter5","questionsChapter6","setQuestionsChapter6","questionsChapter7","setQuestionsChapter7","questionsChapter8","setQuestionsChapter8","questionsChapter9","setQuestionsChapter9","questionsChapter10","setQuestionsChapter10","questionsChapter11","setQuestionsChapter11","questionsChapter12","setQuestionsChapter12","questionsChapter13","setQuestionsChapter13","questionsChapter14","setQuestionsChapter14","filteredQuestions","setFilteredQuestions","correctAnswers","setCorrectAnswers","correctAnswersChapter2","setCorrectAnswersChapter2","correctAnswersChapter3","setCorrectAnswersChapter3","correctAnswersChapter4","setCorrectAnswersChapter4","correctAnswersChapter5","setCorrectAnswersChapter5","correctAnswersChapter6","setCorrectAnswersChapter6","correctAnswersChapter7","setCorrectAnswersChapter7","correctAnswersChapter8","setCorrectAnswersChapter8","correctAnswersChapter9","setCorrectAnswersChapter9","correctAnswersChapter10","setCorrectAnswersChapter10","correctAnswersChapter11","setCorrectAnswersChapter11","correctAnswersChapter12","setCorrectAnswersChapter12","correctAnswersChapter13","setCorrectAnswersChapter13","correctAnswersChapter14","setCorrectAnswersChapter14","isLoading","setIsLoading","stats","setStats","correctCount","totalCount","bookmarkedCount","bookmarkedQuestions","setBookmarkedQuestions","Set","error","setError","chapterLoadingStates","setChapterLoadingStates","cap1","cap2","cap3","cap4","cap5","cap6","cap7","cap8","cap9","cap10","cap11","cap12","cap13","cap14","chapterErrors","setChapterErrors","setChapterLoading","chapter","prev","setChapterError","fetchChapterData","questionsData","answersData","ipcRenderer","invoke","questionsResponse","fetch","json","answersResponse","text","answers","split","forEach","item","parts","length","questionNumber","parseInt","answer","console","loadChapters","data1","data2","response1","response2","chaptersToLoad","loadChapterWithDelay","delay","Promise","resolve","setTimeout","promises","map","index","all","answersData2","fetchQuestionsChapter3","response","data","safeStorage","getItem","key","localStorage","e","setItem","value","savedBookmarks","bookmarks","JSON","parse","warn","size","stringify","switchAppMode","mode","switchChapter","resetStats","searchQuestions","query","trim","toLowerCase","currentQuestions","filtered","filter","q","numar","toString","intrebare","includes","Object","values","variante","updateStats","isCorrect","toggleBookmark","newBookmarks","has","delete","add","loadedChapters","state","totalChapters","keys","progress","Math","round","errors","fileName","_jsxFileName","lineNumber","columnNumber","className","children","allChaptersData","correctAnswersData","currentAnswers","currentQuestionSet","onClick","onChange","target","onExit","href","rel","_c","$RefreshReg$"],"sources":["/Users/dragosudrea/repos/quiz-react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport QuizContainer from './components/QuizContainer';\r\nimport Statistics from './components/Statistics';\r\nimport LoadingOverlay from './components/LoadingOverlay';\r\nimport Simulation from './components/Simulation';\r\n\r\nconst isElectron = window?.electron !== undefined;\r\n\r\nfunction App() {\r\n  // State for app mode and chapter selection\r\n  const [appMode, setAppMode] = useState('quiz'); // 'quiz' or 'simulation'\r\n  const [activeChapter, setActiveChapter] = useState('cap1');\r\n  \r\n  // State for question sets\r\n  const [questions, setQuestions] = useState([]);\r\n  const [questionsChapter2, setQuestionsChapter2] = useState([]);\r\n  const [questionsChapter3, setQuestionsChapter3] = useState([]);\r\n  const [questionsChapter4, setQuestionsChapter4] = useState([]);\r\n  const [questionsChapter5, setQuestionsChapter5] = useState([]);\r\n  const [questionsChapter6, setQuestionsChapter6] = useState([]);\r\n  const [questionsChapter7, setQuestionsChapter7] = useState([]);\r\n  const [questionsChapter8, setQuestionsChapter8] = useState([]);\r\n  const [questionsChapter9, setQuestionsChapter9] = useState([]);\r\n  const [questionsChapter10, setQuestionsChapter10] = useState([]);\r\n  const [questionsChapter11, setQuestionsChapter11] = useState([]);\r\n  const [questionsChapter12, setQuestionsChapter12] = useState([]);\r\n  const [questionsChapter13, setQuestionsChapter13] = useState([]);\r\n  const [questionsChapter14, setQuestionsChapter14] = useState([]);\r\n  const [filteredQuestions, setFilteredQuestions] = useState([]);\r\n  \r\n  // State for correct answers from all chapters\r\n  const [correctAnswers, setCorrectAnswers] = useState({});\r\n  const [correctAnswersChapter2, setCorrectAnswersChapter2] = useState({});\r\n  const [correctAnswersChapter3, setCorrectAnswersChapter3] = useState({});\r\n  const [correctAnswersChapter4, setCorrectAnswersChapter4] = useState({});\r\n  const [correctAnswersChapter5, setCorrectAnswersChapter5] = useState({});\r\n  const [correctAnswersChapter6, setCorrectAnswersChapter6] = useState({});\r\n  const [correctAnswersChapter7, setCorrectAnswersChapter7] = useState({});\r\n  const [correctAnswersChapter8, setCorrectAnswersChapter8] = useState({});\r\n  const [correctAnswersChapter9, setCorrectAnswersChapter9] = useState({});\r\n  const [correctAnswersChapter10, setCorrectAnswersChapter10] = useState({});\r\n  const [correctAnswersChapter11, setCorrectAnswersChapter11] = useState({});\r\n  const [correctAnswersChapter12, setCorrectAnswersChapter12] = useState({});\r\n  const [correctAnswersChapter13, setCorrectAnswersChapter13] = useState({});\r\n  const [correctAnswersChapter14, setCorrectAnswersChapter14] = useState({});\r\n  \r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [stats, setStats] = useState({\r\n    correctCount: 0,\r\n    totalCount: 0,\r\n    bookmarkedCount: 0\r\n  });\r\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState(new Set());\r\n  const [error, setError] = useState(null);\r\n\r\n  // State for loading and errors per chapter\r\n  const [chapterLoadingStates, setChapterLoadingStates] = useState({\r\n    cap1: true,\r\n    cap2: true,\r\n    cap3: true,\r\n    cap4: true,\r\n    cap5: true,\r\n    cap6: true,\r\n    cap7: true,\r\n    cap8: true,\r\n    cap9: true,\r\n    cap10: true,\r\n    cap11: true,\r\n    cap12: true,\r\n    cap13: true,\r\n    cap14: true\r\n  });\r\n\r\n  const [chapterErrors, setChapterErrors] = useState({});\r\n\r\n  // Helper function to update loading state for a chapter\r\n  const setChapterLoading = (chapter, isLoading) => {\r\n    setChapterLoadingStates(prev => ({\r\n      ...prev,\r\n      [chapter]: isLoading\r\n    }));\r\n  };\r\n\r\n  // Helper function to update error state for a chapter\r\n  const setChapterError = (chapter, error) => {\r\n    setChapterErrors(prev => ({\r\n      ...prev,\r\n      [chapter]: error\r\n    }));\r\n  };\r\n\r\n  // Combined fetch function for questions and answers\r\n  const fetchChapterData = async (chapter) => {\r\n    setChapterLoading(chapter, true);\r\n    try {\r\n      // Fetch questions\r\n      let questionsData;\r\n      let answersData;\r\n\r\n      if (isElectron) {\r\n        // Use Electron IPC to load files\r\n        questionsData = await window.electron.ipcRenderer.invoke('read-file', `capitole/cap${chapter}.json`);\r\n        answersData = await window.electron.ipcRenderer.invoke('read-file', `capitole/cap${chapter}_raspunsuri`);\r\n      } else {\r\n        // Web browser fetch\r\n        const questionsResponse = await fetch(`/capitole/cap${chapter}.json`);\r\n        questionsData = await questionsResponse.json();\r\n        \r\n        const answersResponse = await fetch(`/capitole/cap${chapter}_raspunsuri`);\r\n        answersData = await answersResponse.text();\r\n      }\r\n      \r\n      // Process answers\r\n      const answers = {};\r\n      answersData.split('; ').forEach(item => {\r\n        const parts = item.split('.');\r\n        if (parts.length === 2) {\r\n          const questionNumber = parseInt(parts[0]);\r\n          const answer = parts[1];\r\n          answers[questionNumber] = answer;\r\n        }\r\n      });\r\n\r\n      // Update state based on chapter\r\n      switch(chapter) {\r\n        case 4:\r\n          setQuestionsChapter4(questionsData);\r\n          setCorrectAnswersChapter4(answers);\r\n          break;\r\n        case 5:\r\n          setQuestionsChapter5(questionsData);\r\n          setCorrectAnswersChapter5(answers);\r\n          break;\r\n        case 6:\r\n          setQuestionsChapter6(questionsData);\r\n          setCorrectAnswersChapter6(answers);\r\n          break;\r\n        case 7:\r\n          setQuestionsChapter7(questionsData);\r\n          setCorrectAnswersChapter7(answers);\r\n          break;\r\n        case 8:\r\n          setQuestionsChapter8(questionsData);\r\n          setCorrectAnswersChapter8(answers);\r\n          break;\r\n        case 9:\r\n          setQuestionsChapter9(questionsData);\r\n          setCorrectAnswersChapter9(answers);\r\n          break;\r\n        case 10:\r\n          setQuestionsChapter10(questionsData);\r\n          setCorrectAnswersChapter10(answers);\r\n          break;\r\n        case 11:\r\n          setQuestionsChapter11(questionsData);\r\n          setCorrectAnswersChapter11(answers);\r\n          break;\r\n        case 12:\r\n          setQuestionsChapter12(questionsData);\r\n          setCorrectAnswersChapter12(answers);\r\n          break;\r\n        case 13:\r\n          setQuestionsChapter13(questionsData);\r\n          setCorrectAnswersChapter13(answers);\r\n          break;\r\n        case 14:\r\n          setQuestionsChapter14(questionsData);\r\n          setCorrectAnswersChapter14(answers);\r\n          break;\r\n      }\r\n      setChapterError(chapter, null);\r\n    } catch (error) {\r\n      console.error(`Error loading chapter ${chapter}:`, error);\r\n      setChapterError(chapter, `Failed to load chapter ${chapter}`);\r\n    } finally {\r\n      setChapterLoading(chapter, false);\r\n    }\r\n  };\r\n\r\n  // Load all chapters data\r\n  useEffect(() => {\r\n    const loadChapters = async () => {\r\n      // Load chapters 1 and 2 first\r\n      try {\r\n        let data1, data2;\r\n        \r\n        if (isElectron) {\r\n          // Use Electron IPC to load files\r\n          data1 = await window.electron.ipcRenderer.invoke('read-file', 'capitole/cap1.json');\r\n          data2 = await window.electron.ipcRenderer.invoke('read-file', 'capitole/cap2.json');\r\n        } else {\r\n          // Web browser fetch\r\n          const response1 = await fetch('/capitole/cap1.json');\r\n          data1 = await response1.json();\r\n          const response2 = await fetch('/capitole/cap2.json');\r\n          data2 = await response2.json();\r\n        }\r\n        \r\n        setQuestions(data1);\r\n        setQuestionsChapter2(data2);\r\n        setChapterLoading('cap1', false);\r\n        setChapterLoading('cap2', false);\r\n      } catch (error) {\r\n        console.error('Error fetching chapters 1 and 2:', error);\r\n        setChapterError('cap1', 'Failed to load chapter 1');\r\n        setChapterError('cap2', 'Failed to load chapter 2');\r\n      }\r\n\r\n      // Then load chapters 4-14\r\n      const chaptersToLoad = [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\r\n      \r\n      const loadChapterWithDelay = async (chapter, delay) => {\r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n        await fetchChapterData(chapter);\r\n      };\r\n\r\n      const promises = chaptersToLoad.map((chapter, index) => \r\n        loadChapterWithDelay(chapter, index * 200)\r\n      );\r\n\r\n      await Promise.all(promises);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    loadChapters();\r\n  }, []);\r\n\r\n  // Încărcăm răspunsurile corecte pentru capitolul 1\r\n  useEffect(() => {\r\n    const answersData = \"1.ACE; 2.CDE; 3.ABE; 4.ABE; 5.ADE; 6.BDE; 7.ACD; 8.BDE; 9.ABDE; 10.ACE; 11.BDE; 12.ACD; 13.ADE; 14.ACD; 15.BDE; 16.ABCE; 17.AE; 18.BCDE; 19.BE; 20.CDE; 21.ABD; 22.ACE; 23.BCD; 24.ACD; 25.CDE; 26.ACD; 27.CE; 28.BD; 29.CDE; 30.ACD; 31.E; 32.ACD; 33.BDE; 34.ACDE; 35.BD; 36.ABCE; 37.BCE; 38.ACD; 39.BCE; 40.ABD; 41.CDE; 42.BD; 43.CDE; 44.ABE; 45.ABC; 46.BCD; 47.ABE; 48.ADE; 49.BCE; 50.ABD; 51.BCE; 52.BCE; 53.ACE; 54.ABD; 55.ACD; 56.AE; 57.ABE; 58.ACD; 59.ACDE; 60.ACE; 61.BDE; 62.ABE; 63.CD; 64.ABCD; 65.BCD; 66.ACE; 67.ACE; 68.ABD; 69.BDE; 70.ABC; 71.BCE; 72.BDE; 73.ACE; 74.BD; 75.ACDE; 76.ABD; 77.BCE; 78.ACE; 79.BCE; 80.ABCE; 81.ACD; 82.ACD; 83.BDE; 84.ABDE; 85.ABE 86.ACE; 87.ACE; 88.ABE; 89.AD; 90.BCD; 91.BDE; 92.BCE; 93.ACE; 94.ABE; 95.ADE; 96.ABC; 97.BE; 98.ABE; 99.ACDE; 100.ABE; 101.CDE; 102.ACD; 103.ADE; 104.ABD; 105.ACDE; 106.AD; 107.BDE; 108.ABE; 109.ACE; 110.CDE; 111.CDE; 112.ADE; 113.ACE; 114.ACE; 115.ACE; 116.ACD; 117.ACE; 118.BE; 119.ABCE; 120.ACE; 121.ACE; 122.BCD; 123.BCE; 124.ACE; 125.BDE; 126.AC; 127.CDE; 128.ADE; 129.CE; 130.ABD; 131.ACD; 132.BCE; 133.B; 134.BE; 135.ADE; 136.ABCE; 137.BC; 138.CDE; 139.ABE; 140.BDE; 141.ACD; 142.BCE; 143.BCE; 144.CDE; 145.BD; 146.ABDE; 147.ACE; 148.ABD; 149.BDE; 150.ACE; 151.ACDE; 152.BCD; 153.ADE; 154.CDE; 155.BCE; 156.AC; 157.ACD; 158.BDE; 159.BDE; 160.BCE; 161.ACD; 162.ACE; 163.AC; 164.ACD; 165.BCE; 166.ABCD; 167.CE; 168.ABCE; 169.ABCE; 170.BCE; 171.ACE; 172.BDE; 173.CDE; 174.ABE; 175.BCE; 176.ABE; 177.BDE; 178.ABD; 179.ACD; 180.BDE; 181.ADE; 182.CDE; 183.BDE; 184.ACE; 185.BCD; 186.ABE; 187.BCE; 188.BCD; 189.ADE; 190.ADE; 191.ACD; 192.BCD; 193.ACE; 194.BCD; 195.ADE; 196.ABE; 197.BCDE; 198.ACD; 199.BDE; 200.ADE\";\r\n    \r\n    const answers = {};\r\n    answersData.split('; ').forEach(item => {\r\n      const parts = item.split('.');\r\n      if (parts.length === 2) {\r\n        const questionNumber = parseInt(parts[0]);\r\n        const answer = parts[1];\r\n        answers[questionNumber] = answer;\r\n      }\r\n    });\r\n    \r\n    setCorrectAnswers(answers);\r\n  }, []);\r\n\r\n  // Încărcăm răspunsurile corecte pentru capitolul 2\r\n  useEffect(() => {\r\n    const answersData2 = \"1.ADE; 2.AE; 3.ABE; 4.ABE; 5.ACE; 6.ABE; 7.ADE; 8.BCD; 9.BDE; 10.ACE; 11.ADE; 12.BCE; 13.BDE; 14.BCD; 15.BDE; 16.ABD; 17.ACDE; 18.BD; 19.ACE; 20.ACD; 21.BE; 22.ABD; 23.CE; 24.ACD; 25.ABE; 26.ACD; 27.ACDE; 28.BCE; 29.BE; 30.ABE; 31.ADE; 32.CD; 33.BD; 34.D; 35.BD; 36.ABE; 37.BCD; 38.BDE; 39.ADE; 40.ADE; 41.ACE; 42.ACDE; 43.ABE; 44.ADE; 45.BD; 46.ABE; 47.CD; 48.AD; 49.BDE; 50.ACE; 51.BCE; 52.BCD; 53.BCDE; 54.C; 55.BCE; 56.AD; 57.ACE; 58.BCE; 59.ABD; 60.BCE; 61.ACE; 62.AD; 63.ABD; 64.ACE; 65.ACE; 66.ACDE; 67.ADE; 68.ABD; 69.BCD; 70.ACD; 71.BD; 72.ABE; 73.BCE; 74.AD; 75.ACE; 76.BCE; 77.ABE; 78.BC; 79.BDE; 80.BE; 81.CE; 82.ACD; 83.ABD; 84.ABDE; 85.BCD; 86.CD; 87.AE; 88.BCD; 89.ACE; 90.CE; 91.BCD; 92.ABE; 93.BDE; 94.ABE; 95.DE; 96.BCD; 97.ABD; 98.ACE; 99.BCE; 100.ACE; 101.BCD; 102.BDE; 103.BCD; 104.BCD; 105.BCE; 106.BDE; 107.ACE; 108.ADE; 109.ACE; 110.ACD; 111.ACDE; 112.BCE; 113.BCE; 114.BCE; 115.BCDE; 116.ABD; 117.ACE; 118.BE; 119.BD; 120.ACD; 121.ABE; 122.ACE; 123.BCE; 124.ABE; 125.ACE; 126.ACD; 127.ACD; 128.ABD; 129.BCE; 130.BCE; 131.D; 132.DE; 133.AD; 134.BCD; 135.BCE; 136.ABCE; 137.BDE; 138.BDE; 139.BCD; 140.BCE; 141.ACD; 142.BCE; 143.CDE; 144.ACDE; 145.BDE; 146.BCD; 147.CDE; 148.AD; 149.BC; 150.ACD; 151.ACE; 152.AD; 153.ACE; 154.ACDE; 155.BCD; 156.ABDE; 157.ABE; 158.BCD; 159.ABD; 160.BCD; 161.AD; 162.ADE; 163.BCD; 164.AC; 165.BDE; 166.CDE; 167.ABC; 168.ADE; 169.BC; 170.BDE; 171.BDE; 172.ADE; 173.BDE; 174.ABE; 175.BCD; 176.BCE; 177.BCD; 178.ACE; 179.ACE; 180.ACD; 181.ABDE; 182.BE; 183.ACE; 184.CE; 185.CDE; 186.ACDE; 187.ABE; 188.BCD; 189.ACE; 190.ACD\";\r\n    \r\n    const answers = {};\r\n    answersData2.split('; ').forEach(item => {\r\n      const parts = item.split('.');\r\n      if (parts.length === 2) {\r\n        const questionNumber = parseInt(parts[0]);\r\n        const answer = parts[1];\r\n        answers[questionNumber] = answer;\r\n      }\r\n    });\r\n    \r\n    setCorrectAnswersChapter2(answers);\r\n  }, []);\r\n\r\n  // Încărcăm răspunsurile corecte pentru capitolul 3\r\n  useEffect(() => {\r\n    const fetchQuestionsChapter3 = async () => {\r\n      try {\r\n        const response = await fetch('/cap3.json');\r\n        const data = await response.json();\r\n        setQuestionsChapter3(data);\r\n      } catch (error) {\r\n        console.error('Error fetching chapter 3:', error);\r\n        setError('Failed to load chapter 3 questions');\r\n      }\r\n    };\r\n\r\n    fetchQuestionsChapter3();\r\n  }, [questionsChapter2]); // Depends on chapter 2 loading to ensure proper ordering\r\n\r\n  // Helper function to safely interact with localStorage\r\n  const safeStorage = {\r\n    getItem: (key) => {\r\n      try {\r\n        return localStorage.getItem(key);\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    },\r\n    setItem: (key, value) => {\r\n      try {\r\n        localStorage.setItem(key, value);\r\n        return true;\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Încărcăm întrebările salvate din localStorage\r\n  useEffect(() => {\r\n    try {\r\n      const savedBookmarks = safeStorage.getItem('bookmarkedQuestions');\r\n      if (savedBookmarks) {\r\n        const bookmarks = JSON.parse(savedBookmarks);\r\n        setBookmarkedQuestions(new Set(bookmarks));\r\n        setStats(prev => ({\r\n          ...prev,\r\n          bookmarkedCount: bookmarks.length\r\n        }));\r\n      }\r\n    } catch (e) {\r\n      console.warn('Could not load bookmarks:', e);\r\n    }\r\n  }, []);\r\n\r\n  // Actualizăm numărul de întrebări salvate când se modifică bookmarkedQuestions\r\n  useEffect(() => {\r\n    setStats(prev => ({\r\n      ...prev,\r\n      bookmarkedCount: bookmarkedQuestions.size\r\n    }));\r\n    \r\n    // Salvăm întrebările marcate în localStorage\r\n    try {\r\n      safeStorage.setItem('bookmarkedQuestions', JSON.stringify([...bookmarkedQuestions]));\r\n    } catch (e) {\r\n      console.warn('Could not save bookmarks:', e);\r\n    }\r\n  }, [bookmarkedQuestions]);\r\n\r\n  // Funcția pentru schimbarea modului aplicației\r\n  const switchAppMode = (mode) => {\r\n    setAppMode(mode);\r\n  };\r\n\r\n  // Update switchChapter function to handle new chapters\r\n  const switchChapter = (chapter) => {\r\n    setActiveChapter(chapter);\r\n    switch(chapter) {\r\n      case 'cap1':\r\n        setFilteredQuestions(questions);\r\n        break;\r\n      case 'cap2':\r\n        setFilteredQuestions(questionsChapter2);\r\n        break;\r\n      case 'cap3':\r\n        setFilteredQuestions(questionsChapter3);\r\n        break;\r\n      case 'cap4':\r\n        setFilteredQuestions(questionsChapter4);\r\n        break;\r\n      case 'cap5':\r\n        setFilteredQuestions(questionsChapter5);\r\n        break;\r\n      case 'cap6':\r\n        setFilteredQuestions(questionsChapter6);\r\n        break;\r\n      case 'cap7':\r\n        setFilteredQuestions(questionsChapter7);\r\n        break;\r\n      case 'cap8':\r\n        setFilteredQuestions(questionsChapter8);\r\n        break;\r\n      case 'cap9':\r\n        setFilteredQuestions(questionsChapter9);\r\n        break;\r\n      case 'cap10':\r\n        setFilteredQuestions(questionsChapter10);\r\n        break;\r\n      case 'cap11':\r\n        setFilteredQuestions(questionsChapter11);\r\n        break;\r\n      case 'cap12':\r\n        setFilteredQuestions(questionsChapter12);\r\n        break;\r\n      case 'cap13':\r\n        setFilteredQuestions(questionsChapter13);\r\n        break;\r\n      case 'cap14':\r\n        setFilteredQuestions(questionsChapter14);\r\n        break;\r\n      default:\r\n        setFilteredQuestions([]);\r\n    }\r\n    resetStats();\r\n  };\r\n\r\n  // Funcția de căutare în întrebări\r\n  const searchQuestions = (query) => {\r\n    if (!query.trim()) {\r\n      // Reset based on active chapter\r\n      switch(activeChapter) {\r\n        case 'cap1':\r\n          setFilteredQuestions([...questions]);\r\n          break;\r\n        case 'cap2':\r\n          setFilteredQuestions([...questionsChapter2]);\r\n          break;\r\n        case 'cap3':\r\n          setFilteredQuestions([...questionsChapter3]);\r\n          break;\r\n        case 'cap4':\r\n          setFilteredQuestions([...questionsChapter4]);\r\n          break;\r\n        case 'cap5':\r\n          setFilteredQuestions([...questionsChapter5]);\r\n          break;\r\n        case 'cap6':\r\n          setFilteredQuestions([...questionsChapter6]);\r\n          break;\r\n        case 'cap7':\r\n          setFilteredQuestions([...questionsChapter7]);\r\n          break;\r\n        case 'cap8':\r\n          setFilteredQuestions([...questionsChapter8]);\r\n          break;\r\n        case 'cap9':\r\n          setFilteredQuestions([...questionsChapter9]);\r\n          break;\r\n        case 'cap10':\r\n          setFilteredQuestions([...questionsChapter10]);\r\n          break;\r\n        case 'cap11':\r\n          setFilteredQuestions([...questionsChapter11]);\r\n          break;\r\n        case 'cap12':\r\n          setFilteredQuestions([...questionsChapter12]);\r\n          break;\r\n        case 'cap13':\r\n          setFilteredQuestions([...questionsChapter13]);\r\n          break;\r\n        case 'cap14':\r\n          setFilteredQuestions([...questionsChapter14]);\r\n          break;\r\n      }\r\n      return true;\r\n    }\r\n    \r\n    query = query.toLowerCase();\r\n    \r\n    // Select the appropriate question set based on active chapter\r\n    let currentQuestions;\r\n    switch(activeChapter) {\r\n      case 'cap1':\r\n        currentQuestions = questions;\r\n        break;\r\n      case 'cap2':\r\n        currentQuestions = questionsChapter2;\r\n        break;\r\n      case 'cap3':\r\n        currentQuestions = questionsChapter3;\r\n        break;\r\n      case 'cap4':\r\n        currentQuestions = questionsChapter4;\r\n        break;\r\n      case 'cap5':\r\n        currentQuestions = questionsChapter5;\r\n        break;\r\n      case 'cap6':\r\n        currentQuestions = questionsChapter6;\r\n        break;\r\n      case 'cap7':\r\n        currentQuestions = questionsChapter7;\r\n        break;\r\n      case 'cap8':\r\n        currentQuestions = questionsChapter8;\r\n        break;\r\n      case 'cap9':\r\n        currentQuestions = questionsChapter9;\r\n        break;\r\n      case 'cap10':\r\n        currentQuestions = questionsChapter10;\r\n        break;\r\n      case 'cap11':\r\n        currentQuestions = questionsChapter11;\r\n        break;\r\n      case 'cap12':\r\n        currentQuestions = questionsChapter12;\r\n        break;\r\n      case 'cap13':\r\n        currentQuestions = questionsChapter13;\r\n        break;\r\n      case 'cap14':\r\n        currentQuestions = questionsChapter14;\r\n        break;\r\n      default:\r\n        currentQuestions = [];\r\n    }\r\n    \r\n    const filtered = currentQuestions.filter(q => {\r\n      // Căutăm după numărul întrebării\r\n      if (q.numar.toString() === query) {\r\n        return true;\r\n      }\r\n      \r\n      // Căutăm în textul întrebării\r\n      if (q.intrebare.toLowerCase().includes(query)) {\r\n        return true;\r\n      }\r\n      \r\n      // Căutăm în variante\r\n      for (const text of Object.values(q.variante)) {\r\n        if (text.toLowerCase().includes(query)) {\r\n          return true;\r\n        }\r\n      }\r\n      \r\n      return false;\r\n    });\r\n    \r\n    setFilteredQuestions(filtered);\r\n    \r\n    return filtered.length > 0;\r\n  };\r\n\r\n  // Funcția pentru actualizarea statisticilor\r\n  const updateStats = (isCorrect) => {\r\n    setStats(prev => ({\r\n      ...prev,\r\n      correctCount: isCorrect ? prev.correctCount + 1 : prev.correctCount,\r\n      totalCount: prev.totalCount + 1\r\n    }));\r\n  };\r\n\r\n  // Funcția pentru resetarea statisticilor\r\n  const resetStats = () => {\r\n    setStats(prev => ({\r\n      ...prev,\r\n      correctCount: 0,\r\n      totalCount: 0\r\n    }));\r\n  };\r\n\r\n  // Funcția pentru toggle bookmark\r\n  const toggleBookmark = (questionNumber) => {\r\n    setBookmarkedQuestions(prev => {\r\n      const newBookmarks = new Set(prev);\r\n      if (newBookmarks.has(questionNumber)) {\r\n        newBookmarks.delete(questionNumber);\r\n      } else {\r\n        newBookmarks.add(questionNumber);\r\n      }\r\n      return newBookmarks;\r\n    });\r\n  };\r\n\r\n  if (isLoading) {\r\n    const loadedChapters = Object.values(chapterLoadingStates).filter(state => !state).length;\r\n    const totalChapters = Object.keys(chapterLoadingStates).length;\r\n    return (\r\n      <LoadingOverlay \r\n        progress={Math.round((loadedChapters / totalChapters) * 100)} \r\n        errors={chapterErrors}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-message\">Eroare: {error}</div>;\r\n  }\r\n\r\n  // Prepare data for simulation mode\r\n  const allChaptersData = {\r\n    cap1: questions,\r\n    cap2: questionsChapter2,\r\n    cap3: questionsChapter3,\r\n    cap4: questionsChapter4,\r\n    cap5: questionsChapter5,\r\n    cap6: questionsChapter6,\r\n    cap7: questionsChapter7,\r\n    cap8: questionsChapter8,\r\n    cap9: questionsChapter9,\r\n    cap10: questionsChapter10,\r\n    cap11: questionsChapter11,\r\n    cap12: questionsChapter12,\r\n    cap13: questionsChapter13,\r\n    cap14: questionsChapter14\r\n  };\r\n  \r\n  const correctAnswersData = {\r\n    cap1: correctAnswers,\r\n    cap2: correctAnswersChapter2,\r\n    cap3: correctAnswersChapter3,\r\n    cap4: correctAnswersChapter4,\r\n    cap5: correctAnswersChapter5,\r\n    cap6: correctAnswersChapter6,\r\n    cap7: correctAnswersChapter7,\r\n    cap8: correctAnswersChapter8,\r\n    cap9: correctAnswersChapter9,\r\n    cap10: correctAnswersChapter10,\r\n    cap11: correctAnswersChapter11,\r\n    cap12: correctAnswersChapter12,\r\n    cap13: correctAnswersChapter13,\r\n    cap14: correctAnswersChapter14\r\n  };\r\n  \r\n  // Get the correct answers based on active chapter\r\n  let currentAnswers;\r\n  let currentQuestionSet;\r\n  \r\n  switch(activeChapter) {\r\n    case 'cap1':\r\n      currentAnswers = correctAnswers;\r\n      currentQuestionSet = questions;\r\n      break;\r\n    case 'cap2':\r\n      currentAnswers = correctAnswersChapter2;\r\n      currentQuestionSet = questionsChapter2;\r\n      break;\r\n    case 'cap3':\r\n      currentAnswers = correctAnswersChapter3;\r\n      currentQuestionSet = questionsChapter3;\r\n      break;\r\n    case 'cap4':\r\n      currentAnswers = correctAnswersChapter4;\r\n      currentQuestionSet = questionsChapter4;\r\n      break;\r\n    case 'cap5':\r\n      currentAnswers = correctAnswersChapter5;\r\n      currentQuestionSet = questionsChapter5;\r\n      break;\r\n    case 'cap6':\r\n      currentAnswers = correctAnswersChapter6;\r\n      currentQuestionSet = questionsChapter6;\r\n      break;\r\n    case 'cap7':\r\n      currentAnswers = correctAnswersChapter7;\r\n      currentQuestionSet = questionsChapter7;\r\n      break;\r\n    case 'cap8':\r\n      currentAnswers = correctAnswersChapter8;\r\n      currentQuestionSet = questionsChapter8;\r\n      break;\r\n    case 'cap9':\r\n      currentAnswers = correctAnswersChapter9;\r\n      currentQuestionSet = questionsChapter9;\r\n      break;\r\n    case 'cap10':\r\n      currentAnswers = correctAnswersChapter10;\r\n      currentQuestionSet = questionsChapter10;\r\n      break;\r\n    case 'cap11':\r\n      currentAnswers = correctAnswersChapter11;\r\n      currentQuestionSet = questionsChapter11;\r\n      break;\r\n    case 'cap12':\r\n      currentAnswers = correctAnswersChapter12;\r\n      currentQuestionSet = questionsChapter12;\r\n      break;\r\n    case 'cap13':\r\n      currentAnswers = correctAnswersChapter13;\r\n      currentQuestionSet = questionsChapter13;\r\n      break;\r\n    case 'cap14':\r\n      currentAnswers = correctAnswersChapter14;\r\n      currentQuestionSet = questionsChapter14;\r\n      break;\r\n    default:\r\n      currentAnswers = {};\r\n      currentQuestionSet = [];\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Grile Admitere Timisoara Biologie 2024</h1>\r\n        \r\n        <div className=\"app-mode-selector\">\r\n          <button \r\n            className={`mode-btn ${appMode === 'quiz' ? 'active' : ''}`}\r\n            onClick={() => switchAppMode('quiz')}\r\n          >\r\n            Mod Quiz\r\n          </button>\r\n          <button \r\n            className={`mode-btn ${appMode === 'simulation' ? 'active' : ''}`}\r\n            onClick={() => switchAppMode('simulation')}\r\n          >\r\n            Simulare Examen\r\n          </button>\r\n        </div>\r\n        \r\n        {appMode === 'quiz' && (\r\n          <div className=\"chapter-selector\">\r\n            <select \r\n              className=\"chapter-dropdown\"\r\n              value={activeChapter}\r\n              onChange={(e) => switchChapter(e.target.value)}\r\n            >\r\n              <option value=\"cap1\">Capitolul 1</option>\r\n              <option value=\"cap2\">Capitolul 2</option>\r\n              <option value=\"cap3\">Capitolul 3</option>\r\n              <option value=\"cap4\">Capitolul 4</option>\r\n              <option value=\"cap5\">Capitolul 5</option>\r\n              <option value=\"cap6\">Capitolul 6</option>\r\n              <option value=\"cap7\">Capitolul 7</option>\r\n              <option value=\"cap8\">Capitolul 8</option>\r\n              <option value=\"cap9\">Capitolul 9</option>\r\n              <option value=\"cap10\">Capitolul 10</option>\r\n              <option value=\"cap11\">Capitolul 11</option>\r\n              <option value=\"cap12\">Capitolul 12</option>\r\n              <option value=\"cap13\">Capitolul 13</option>\r\n              <option value=\"cap14\">Capitolul 14</option>\r\n            </select>\r\n          </div>\r\n        )}\r\n      </header>\r\n      \r\n      <main>\r\n        {appMode === 'quiz' ? (\r\n          <>\r\n            <QuizContainer\r\n              questions={currentQuestionSet}\r\n              filteredQuestions={filteredQuestions}\r\n              correctAnswers={currentAnswers}\r\n              bookmarkedQuestions={bookmarkedQuestions}\r\n              updateStats={updateStats}\r\n              toggleBookmark={toggleBookmark}\r\n              searchQuestions={searchQuestions}\r\n            />\r\n            <Statistics\r\n              correctCount={stats.correctCount}\r\n              totalCount={stats.totalCount}\r\n              bookmarkedCount={stats.bookmarkedCount}\r\n              resetStats={resetStats}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Simulation \r\n            allChaptersData={allChaptersData}\r\n            correctAnswersData={correctAnswersData}\r\n            onExit={() => switchAppMode('quiz')}\r\n          />\r\n        )}\r\n      </main>\r\n      \r\n      <footer className=\"App-footer\">\r\n        <div className=\"footer-content\">\r\n          <a href=\"https://revolut.me/dragoscdk\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"donate-button\">\r\n            Donează\r\n          </a>\r\n          <p>© 2024 Grile Admitere Timisoara Biologie</p>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}